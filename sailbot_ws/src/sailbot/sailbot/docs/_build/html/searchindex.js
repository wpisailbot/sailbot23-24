Search.setIndex({"docnames": ["airmar_reader", "ballast_control", "buoy_detection", "esp32_comms", "heading_controller_vf", "index", "network_comms", "path_follower_vf", "state_manager", "wind_smoother"], "filenames": ["airmar_reader.rst", "ballast_control.rst", "buoy_detection.rst", "esp32_comms.rst", "heading_controller_vf.rst", "index.rst", "network_comms.rst", "path_follower_vf.rst", "state_manager.rst", "wind_smoother.rst"], "titles": ["Airmar Reader Node", "Ballast Control Node", "Buoy Detection Node", "ESP32 Comms Node", "Heading Controller Node", "Welcome to sailbot\u2019s documentation!", "Network Comms Node", "Path Follower Node", "State Manager Node", "Wind Smoother Node"], "terms": {"class": [0, 1, 2, 3, 4, 6, 7, 8, 9], "airmar_read": 0, "airmarread": [0, 5], "sourc": [0, 1, 2, 3, 4, 6, 7, 8, 9], "base": [0, 1, 2, 3, 4, 6, 7, 8, 9], "lifecyclenod": [0, 1, 3, 4, 6, 7, 9], "A": [0, 1, 2, 3, 4, 6, 7, 8, 9], "ro": [0, 1, 2, 3, 4, 7], "2": [0, 1], "lifecycl": [0, 1, 3, 4, 6, 7, 8, 9], "handl": [0, 1, 2, 3, 4, 6, 7, 8, 9], "read": [0, 1, 3, 9], "interpret": 0, "nmea": 0, "data": [0, 1, 2, 3, 4, 6, 7, 9], "from": [0, 1, 2, 3, 4, 6, 7, 8, 9], "an": [0, 1, 2, 3, 4, 6, 7, 8, 9], "sensor": [0, 1, 7, 9], "publish": [0, 1, 2, 3, 4, 6, 7, 9], "structur": [0, 2], "json": [0, 3], "variou": [0, 2, 4, 6, 7], "topic": [0, 2, 3, 4, 7, 9], "thi": [0, 1, 2, 3, 4, 6, 7, 8, 9], "i": [0, 1, 2, 3, 4, 6, 7, 8, 9], "respons": [0, 1, 2, 3, 7, 8], "establish": 0, "serial": [0, 3], "connect": [0, 3, 7, 8], "pars": 0, "incom": [0, 2], "sentenc": 0, "distribut": 0, "process": [0, 1, 2, 3, 7, 8], "through": [0, 1, 2, 4, 7, 8], "set": [0, 1, 2, 3, 4, 6, 7, 8, 9], "type": [0, 2, 3, 4, 6, 7, 9], "includ": [0, 2, 3, 4, 6, 7, 8, 9], "navig": [0, 4, 6, 7], "environment": [0, 1, 4], "condit": [0, 1, 3, 4, 6, 7], "vessel": 0, "dynam": [0, 1, 4, 7], "variabl": [0, 1, 2, 3, 4, 6, 7, 8, 9], "gener": [0, 7, 8], "raw": [0, 9], "format": [0, 2, 3], "rot_publish": 0, "": [0, 1, 2, 3, 4, 6, 7, 9], "rate": [0, 4], "turn": [0, 4], "navsat_publish": 0, "latitud": [0, 2, 4, 7], "longitud": [0, 2, 4, 7], "track_degrees_true_publish": 0, "true": [0, 3, 4, 7, 8, 9], "head": [0, 1, 2, 5, 6, 7], "track_degrees_magnetic_publish": 0, "magnet": 0, "speed_knots_publish": 0, "speed": [0, 1, 7], "knot": [0, 7], "speed_kmh_publish": 0, "kilomet": 0, "per": [0, 7], "hour": 0, "heading_publish": 0, "compass": 0, "true_wind_publish": 0, "wind": [0, 1, 3, 4, 5, 6, 7], "apparent_wind_publish": 0, "appar": [0, 9], "roll_publish": 0, "roll": [0, 1], "pitch_publish": 0, "pitch": 0, "state": [0, 1, 2, 3, 4, 5, 6, 7, 9], "configur": [0, 1, 2, 3, 4, 6, 7, 8, 9], "up": [0, 1, 2, 3, 4, 6, 7, 8, 9], "activ": [0, 1, 3, 4, 6, 7, 8, 9], "start": [0, 1, 2, 4, 7, 8], "timer": [0, 1, 3, 8], "deactiv": [0, 1, 3, 4, 6, 7, 8, 9], "stop": [0, 1], "clean": [0, 1, 3, 4, 6, 7, 8, 9], "destroi": 0, "shut": [0, 1, 3, 4, 6, 7, 9], "down": [0, 1, 3, 4, 6, 7, 9], "close": 0, "port": [0, 1, 3], "perform": [0, 1, 3, 4, 7, 8], "ani": [0, 2, 3, 4, 6, 7, 8, 9], "final": [0, 8], "cleanup": [0, 1], "The": [0, 1, 2, 3, 4, 6, 7, 8, 9], "subscrib": [0, 2, 4, 7, 9], "directli": [0, 1, 2, 3, 4, 7, 8], "instead": [0, 8], "pull": 0, "continu": 0, "It": [0, 1, 2, 3, 4, 6, 7, 8, 9], "depend": [0, 7], "e": [0, 4, 7], "g": 0, "callback": [0, 1, 2, 3, 4, 6, 7, 8, 9], "timer_callback": [0, 4], "regularli": 0, "call": [0, 1, 2, 3, 4, 6, 7, 8, 9], "receiv": [0, 1, 2, 3, 4, 7], "result": [0, 2, 3, 4, 6, 7, 8, 9], "usag": [0, 1, 2, 3, 4, 6, 7, 8, 9], "must": [0, 1, 2, 3, 4, 6, 7, 8, 9], "manag": [0, 1, 2, 3, 4, 5, 6, 7, 9], "state_manag": [0, 1, 2, 3, 4, 6, 7, 8, 9], "note": [0, 1, 2, 3, 6, 7, 8], "requir": [0, 1, 4, 7, 8], "weatherst": 0, "current": [0, 1, 2, 3, 4, 6, 7, 8], "provid": [0, 1, 4, 8], "maretron": 0, "usb100": 0, "on_activ": [0, 1, 3, 4, 6, 7, 9], "lifecyclest": [0, 1, 3, 4, 6, 7, 9], "transitioncallbackreturntyp": [0, 1, 3, 4, 6, 7, 9], "transit": [0, 1, 3, 4, 6, 7, 8, 9], "default": [0, 1, 2, 3, 4, 6, 7, 9], "all": [0, 1, 2, 3, 4, 6, 7, 8, 9], "entiti": [0, 1, 3, 4, 6, 7, 9], "give": [0, 1, 3, 4, 6, 7, 9], "first": [0, 1, 3, 4, 6, 7, 9], "return": [0, 1, 2, 3, 4, 6, 7, 8, 9], "transitioncallbackreturn": [0, 1, 3, 4, 6, 7, 9], "failur": [0, 1, 3, 4, 6, 7, 8, 9], "error": [0, 1, 3, 4, 6, 7, 9], "possibl": [0, 1, 3, 4, 6, 7, 8, 9], "overrid": [0, 1, 2, 3, 4, 6, 7, 9], "behavior": [0, 1, 2, 3, 4, 6, 7, 8, 9], "desir": [0, 1, 3, 4, 6, 7, 9], "If": [0, 1, 2, 3, 4, 6, 7, 8, 9], "you": [0, 1, 3, 4, 6, 7, 9], "onli": [0, 1, 2, 3, 4, 6, 7, 9], "want": [0, 1, 3, 4, 6, 7, 9], "extend": [0, 1, 3, 4, 6, 7, 9], "what": [0, 1, 3, 4, 6, 7, 9], "doe": [0, 1, 3, 4, 6, 7, 9], "make": [0, 1, 3, 4, 6, 7, 9], "sure": [0, 1, 3, 4, 6, 7, 9], "super": [0, 1, 3, 4, 6, 7, 9], "deriv": [0, 1, 2, 3, 4, 6, 7, 9], "on_cleanup": [0, 1, 3, 4, 6, 7, 9], "on_configur": [0, 1, 3, 4, 6, 7, 9], "on_deactiv": [0, 1, 3, 4, 6, 7, 9], "publishifvalid": 0, "valu": [0, 1, 2, 3, 4, 6, 7, 8, 9], "valid": [0, 2], "given": [0, 2, 3, 4, 6, 7, 9], "us": [0, 1, 2, 3, 4, 6, 7, 8], "specifi": [0, 1, 2, 4, 7, 8], "function": [0, 1, 2, 3, 4, 7, 8], "design": [0, 4, 7, 8, 9], "ensur": [0, 1, 2, 4, 7, 8], "paramet": [0, 1, 2, 3, 4, 6, 7, 8, 9], "can": [0, 6, 8], "singl": [0, 7], "tupl": [0, 2, 4, 6, 7], "object": [0, 2, 6, 7], "which": [0, 1, 2, 3, 4, 6, 7, 8, 9], "defin": [0, 2, 4, 7, 8], "how": [0, 7], "one": [0, 2, 3, 4, 6, 7, 8, 9], "sever": [0, 4], "expect": [0, 2], "messag": [0, 1, 2, 3, 4, 6, 7, 8, 9], "float64": [0, 1, 2, 3, 4, 6, 7], "navsatfix": [0, 2, 4, 6, 7], "none": [0, 1, 2, 3, 4, 6, 7, 8, 9], "check": [0, 1, 2, 3, 4, 7, 8], "construct": [0, 7], "correspond": [0, 1, 2, 7, 8], "attempt": [0, 2, 3, 4, 6, 7, 8, 9], "cast": 0, "appropri": [0, 4, 7], "success": [0, 3, 8], "occur": 0, "dure": [0, 3, 4, 7, 8], "catch": 0, "except": [0, 2, 3, 4, 6, 7, 9], "refrain": 0, "option": [0, 1, 2, 4, 7], "log": [0, 1, 3, 4, 7, 8], "ignor": [0, 2, 3, 4, 6, 7, 9], "invalid": [0, 2], "support": [0, 8], "multipl": [0, 6], "more": [0, 1, 7], "need": [0, 1, 2, 4, 7, 8], "publish_error": [0, 1, 3, 4, 7], "string": [0, 1, 3, 4, 6, 7, 8], "str": [0, 1, 3, 4, 6, 7, 8], "readlinetojson": 0, "line": [0, 4, 7], "input": [0, 1, 2, 6, 8], "decod": [0, 3], "like": [0, 2, 3, 4, 6, 7], "dictionari": [0, 6, 7, 8], "code": 0, "while": [0, 7], "relev": [0, 4, 7], "inform": [0, 2, 7], "repres": [0, 2, 4, 6, 7], "vari": 0, "empti": [0, 3, 7], "certain": 0, "ar": [0, 1, 2, 3, 4, 6, 7, 8, 9], "deem": [0, 7], "unnecessari": [0, 7], "redund": 0, "primarili": 0, "monitor": [0, 4, 6, 7, 8], "convert": [0, 2, 4, 7], "form": [0, 1], "varieti": 0, "gp": 0, "posit": [0, 1, 2, 3, 4, 6, 7], "gll": 0, "rot": 0, "vtg": 0, "temperatur": 0, "atmospher": 0, "pressur": 0, "xdr": 0, "mwv": 0, "mwd": 0, "also": [0, 1, 3, 4, 7], "oper": [0, 1, 2, 3, 4, 7], "split": 0, "comma": 0, "differenti": 0, "field": [0, 4, 7], "remov": [0, 2, 7], "checksum": 0, "identifi": [0, 2, 7], "tag": 0, "accordingli": [0, 3], "helper": [0, 2], "signific": [0, 4, 8], "action": [0, 2, 3, 4, 6, 7, 8, 9], "point": [0, 2, 4, 7], "debug": [0, 2, 4, 7, 8], "purpos": [0, 1, 7, 8], "where": [0, 1, 2, 3, 4, 7], "applic": [0, 7], "unsupport": 0, "assum": [0, 2, 7, 8], "avail": [0, 2, 4, 7, 8], "main": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9], "arg": [0, 1, 2, 3, 4, 6, 7, 8, 9], "ballast_control": 1, "ballastcontrol": [1, 5], "system": [1, 2, 3, 4, 6, 7, 8], "sailboat": [1, 4], "maintain": [1, 2, 4, 7, 9], "boat": [1, 3, 4, 6, 7], "stabil": 1, "optim": [1, 2, 3, 4], "sail": [1, 3, 4], "interfac": 1, "hardwar": 1, "pwm": 1, "signal": [1, 3], "motor": 1, "airmar": [1, 5], "adjust": [1, 2, 3, 4, 7], "counteract": 1, "induc": 1, "other": [1, 2, 3, 4, 6, 7, 8], "factor": [1, 2, 4, 7], "ballast_pwm_publish": 1, "roll_error": 1, "list": [1, 2, 3, 4, 6, 7, 8, 9], "store": [1, 3, 7, 9], "recent": [1, 3, 9], "measur": [1, 2, 3], "comput": [1, 2, 4, 9], "averag": 1, "num_error_read": 1, "int": [1, 4, 6, 7, 8], "number": [1, 7, 9], "keep": [1, 3], "adc_full_starboard": 1, "adc": 1, "full": [1, 3, 4, 7], "starboard": [1, 3], "adc_full_port": 1, "adc_max": 1, "maximum": [1, 2], "adc_min": 1, "minimum": [1, 2, 7], "motor_fast_starboard": 1, "move": [1, 2, 4], "fast": 1, "toward": [1, 4, 7], "motor_fast_port": 1, "motor_stop": 1, "control_fast_port": 1, "float": [1, 4, 7], "movement": [1, 4], "control_fast_starboard": 1, "error_min_magnitud": 1, "magnitud": 1, "necessari": [1, 3, 4, 8], "actuat": 1, "ramp_up_tim": 1, "time": [1, 8], "period": [1, 3], "ramp": 1, "kp": 1, "proport": [1, 4], "gain": [1, 4], "pid": 1, "kd": 1, "roll_kp": 1, "correct": [1, 3, 4, 7, 8], "current_target": 1, "target": [1, 4, 7], "current_ballast_posit": 1, "last": [1, 3, 7], "known": 1, "bool": [1, 4], "flag": [1, 3], "determin": [1, 2, 3, 4, 7], "current_wind_dir": 1, "direct": [1, 2, 4, 7, 9], "degre": [1, 2, 3, 4, 7], "autonomous_mod": [1, 3, 4], "autonom": [1, 3, 4, 6], "mode": [1, 3, 4], "subscript": [1, 3, 4, 6, 7, 8, 9], "loop": [1, 7], "addit": 1, "strategi": 1, "involv": [1, 4], "respond": 1, "chang": [1, 3, 4, 7, 8], "p": 1, "mechan": [1, 4, 7], "smooth": [1, 7, 9], "out": [1, 2], "prevent": [1, 2, 3, 4, 6, 7, 9], "sudden": [1, 3], "could": 1, "damag": 1, "belt": 1, "drive": 1, "shaft": 1, "ballast_position_callback": 1, "updat": [1, 2, 3, 4, 7, 9], "current_ballast_position_callback": 1, "intern": [1, 2, 7], "airmar_roll_callback": 1, "new": [1, 2, 3, 7], "apparent_wind_callback": [1, 3, 6, 9], "sophist": 1, "airmar_heading_callback": [1, 2, 4], "track": [1, 2, 4, 5, 7], "control_loop_callback": 1, "calcul": [1, 2, 4, 7], "send": [1, 3, 6, 8], "roll_correction_callback": 1, "accumul": 1, "everi": 1, "10": [1, 4, 9], "second": [1, 8], "shorter": 1, "improv": [1, 2], "extrem": [1, 3], "expens": 1, "term": 1, "batteri": 1, "2847": 1, "1247": 1, "1": [1, 2, 4, 7], "0": [1, 2, 3, 4, 7], "20": [1, 3, 9], "005": 1, "60": 1, "130": 1, "95": 1, "msg": [1, 2, 3, 4, 6, 7, 9], "futur": 1, "analysi": [1, 2], "method": [1, 2, 3, 4, 6, 7, 8, 9], "automat": 1, "whenev": [1, 3], "rel": [1, 2, 3, 4, 7], "angl": [1, 2, 3, 4, 6, 7], "between": [1, 2, 3, 4, 7, 8], "actual": [1, 8], "contain": [1, 2, 3, 6, 7], "kei": [1, 3, 7], "exit": [1, 3, 4, 7], "side": [1, 3, 4, 7], "buffer": 1, "most": [1, 9], "self": [1, 3, 4, 7], "kept": [1, 2], "case": [1, 2, 3, 4, 6, 7, 9], "behind": 1, "ahead": [1, 7], "autonomous_mode_callback": [1, 3, 4], "autonomousmod": [1, 3, 4], "constrain_control": 1, "setpoint": 1, "appli": [1, 2, 3, 4, 8], "smoother": [1, 4, 5], "decid": [1, 7], "command": [1, 4, 6, 8], "esp": 1, "comm": [1, 5], "incorpor": 1, "smoothli": 1, "reach": [1, 4], "over": [1, 3, 6], "step": [1, 3, 7], "No": 1, "immedi": [1, 8], "small": [1, 2], "below": 1, "minim": [1, 3], "threshold": [1, 2], "phase": 1, "scale": [1, 2, 4], "effort": 1, "elaps": 1, "via": [1, 3, 8], "simpl": 1, "law": 1, "when": [1, 3, 4, 7], "avoid": [1, 3, 7], "strain": 1, "ha": [1, 7, 8], "torn": 1, "without": [1, 4, 7], "constrain": 1, "within": [1, 2, 4, 7, 8], "bound": [1, 5, 6, 7], "schedul": 1, "run": [1, 2, 6, 8, 9], "regular": 1, "interv": [1, 7], "reset": 1, "achiev": [1, 9], "margin": 1, "oscil": 1, "around": [1, 7], "robust": [1, 6], "would": [1, 4], "wa": [1, 2, 3, 4, 6, 7, 8, 9], "veloc": [1, 2], "sinc": 1, "right": [1, 7], "now": [1, 2], "control_to_motor_valu": 1, "2047": 1, "int16": [1, 3, 6], "in_ramp_up": 1, "fals": [1, 3, 4, 6, 7, 8], "median": [1, 9], "lst": [1, 9], "on_error": [1, 3, 4, 6, 7, 9], "on_shutdown": [1, 3, 4, 6, 7, 9], "previous_error": 1, "previous_tim": 1, "1716959256": 1, "2505746": 1, "start_tim": 1, "low": 1, "high": 1, "make_json_str": [1, 5, 6], "json_msg": [1, 6], "buoy_detect": 2, "buoydetect": [2, 5], "ros2": [2, 3, 4, 6, 7, 8, 9], "imag": [2, 6, 7], "camera": 2, "stream": [2, 6], "color": 2, "shape": 2, "criteria": 2, "locat": [2, 6, 7], "current_x_scaling_factor": 2, "pixel": [2, 7], "coordin": [2, 4, 6, 7], "width": [2, 7], "current_y_scaling_factor": 2, "height": [2, 7], "vehicl": 2, "publish_track": 2, "associate_detections_to_track": 2, "associ": 2, "exist": [2, 3, 4, 6, 7, 9], "cost": 2, "matrix": 2, "euclidean": 2, "distanc": [2, 4, 5, 7], "listener_callback": 2, "each": [2, 3, 4, 6, 7, 8, 9], "fill_hol": 2, "fill": 2, "hole": 2, "binari": 2, "creat": [2, 7, 8], "solid": 2, "reliabl": 2, "detect_colored_object": 2, "calculate_depth": 2, "find": [2, 4, 6, 7], "depth": 2, "sampl": 2, "textur": 2, "zed": 2, "calculate_object_cent": 2, "center": [2, 7], "pixel_to_world": 2, "world": 2, "intrins": 2, "zed2": 2, "order": [2, 3, 4, 6, 7, 9], "frame": [2, 6], "airmar_position_callback": [2, 4, 7], "detections_enu": 2, "max_dist": 2, "3": [2, 3], "predict": 2, "kalman": 2, "filter": 2, "we": [2, 7], "don": [2, 7], "t": [2, 3, 4, 6, 7, 9], "have": [2, 3, 4, 6, 7, 9], "so": [2, 6], "useless": 2, "match": [2, 3, 6, 7], "unmatch": 2, "further": [2, 7], "east": [2, 7], "north": [2, 4, 7], "enu": 2, "allow": [2, 3, 4, 6, 7, 8, 9], "consid": [2, 4], "meter": 2, "two": [2, 4], "element": 2, "track_index": 2, "detection_index": 2, "confirm": 2, "unmatched_detect": 2, "indic": [2, 3, 7, 8], "did": 2, "build": 2, "hungarian": 2, "algorithm": 2, "linear": [2, 7], "sum": 2, "assign": [2, 7], "reason": 2, "remain": 2, "after": [2, 3, 4, 6, 7, 9], "buoy_typ": 2, "buoytypeinfo": 2, "contour": 2, "diamet": 2, "v": [2, 4], "should": [2, 7, 8], "its": [2, 3, 4, 6, 7, 8], "enclos": 2, "circl": [2, 7], "estim": 2, "agre": 2, "camera_depth_image_callback": [2, 6], "cv_parameters_callback": 2, "cvparamet": [2, 6], "depth_imag": 2, "type_info": 2, "opencv": 2, "segment": [2, 4, 7], "hsv": 2, "space": 2, "mask": 2, "isol": 2, "region": 2, "meet": 2, "specif": [2, 4, 7, 8], "area": 2, "circular": 2, "arrai": [2, 4], "bgr": 2, "typic": 2, "captur": [2, 3], "devic": 2, "simul": 2, "environ": [2, 7], "These": [2, 8], "presum": 2, "fit": 2, "characterist": 2, "better": 2, "rang": [2, 4], "refin": 2, "morpholog": 2, "reduc": [2, 4], "nois": 2, "too": 2, "larg": 2, "analyz": [2, 7], "thei": [2, 3, 4, 6, 7, 8, 9], "draw": 2, "visual": 2, "verif": 2, "highlight": 2, "save": 2, "disk": 2, "comment": 2, "estimate_depth": 2, "subsequ": [2, 7], "both": [2, 7], "extern": [2, 4, 8], "boundari": 2, "latter": 2, "solidifi": 2, "numpi": [2, 4], "white": 2, "black": 2, "background": 2, "been": [2, 3, 4, 6, 7, 8, 9], "findcontour": 2, "retriev": [2, 7, 8], "same": 2, "size": [2, 7], "serv": 2, "iter": [2, 7], "hierarchi": 2, "level": 2, "complement": 2, "effect": [2, 8], "revers": 2, "prepar": 2, "orang": 2, "get_paramet": [2, 3, 4, 6, 7, 9], "get": [2, 3, 4, 6, 7, 8, 9], "name": [2, 3, 4, 6, 7, 8, 9], "fulli": [2, 3, 4, 6, 7, 9], "qualifi": [2, 3, 4, 6, 7, 9], "namespac": [2, 3, 4, 6, 7, 9], "undeclar": [2, 3, 4, 6, 7, 9], "rais": [2, 3, 4, 6, 7, 9], "parameternotdeclaredexcept": [2, 3, 4, 6, 7, 9], "least": [2, 3, 4, 6, 7, 9], "hadn": [2, 3, 4, 6, 7, 9], "declar": [2, 3, 4, 6, 7, 9], "beforehand": [2, 3, 4, 6, 7, 9], "parameteruninitializedexcept": [2, 3, 4, 6, 7, 9], "static": [2, 3, 4, 6, 7, 9], "uniniti": [2, 3, 4, 6, 7, 9], "42": [2, 7], "0396766107111": [2, 7], "71": [2, 7], "84585650616927": [2, 7], "x_pixel": 2, "y_pixel": 2, "f_x": 2, "f_y": 2, "c_x": 2, "c_y": 2, "x": [2, 4, 7], "sphere": 2, "y": [2, 4, 7], "unit": [2, 7], "focal": 2, "length": [2, 7], "along": [2, 4, 6, 7], "axi": 2, "optic": 2, "z": 2, "real": 2, "pinhol": 2, "model": [2, 7], "translat": 2, "3d": 2, "convers": 2, "account": [2, 4, 7], "offset": [2, 4], "remove_stale_track": 2, "set_paramet": [2, 3, 4, 6, 7, 9], "fail": [2, 3, 4, 6, 7, 9], "due": [2, 3, 4, 6, 7, 9], "being": [2, 3, 4, 6, 7, 9], "alreadi": [2, 3, 4, 6, 7, 8, 9], "stai": [2, 3, 4, 6, 7, 9], "made": [2, 3, 4, 6, 7, 9], "come": [2, 3, 4, 6, 7, 9], "implicitli": [2, 3, 4, 6, 7, 9], "befor": [2, 3, 4, 6, 7, 8, 9], "even": [2, 3, 4, 6, 7, 9], "were": [2, 3, 4, 6, 7, 9], "regist": [2, 3, 4, 6, 7, 9], "previous": [2, 3, 4, 6, 7, 9], "add_on_set_parameters_callback": [2, 3, 4, 6, 7, 9], "prior": [2, 3, 4, 6, 7, 9], "onc": [2, 3, 4, 6, 7, 9], "reflect": [2, 3, 4, 6, 7, 9], "For": [2, 3, 4, 6, 7, 9], "successfulli": [2, 3, 4, 6, 7, 9], "parameterev": [2, 3, 4, 6, 7, 9], "not_set": [2, 3, 4, 6, 7, 9], "someth": [2, 3, 4, 6, 7, 9], "els": [2, 3, 4, 6, 7, 9], "parameter_list": [2, 3, 4, 6, 7, 9], "zed_image_callback": 2, "undistort": 2, "util": [2, 3, 4, 6], "geograph": [2, 7], "modifi": [2, 3, 7], "resolut": 2, "pre": 2, "distort": 2, "coeffici": 2, "transform": 2, "geodet": 2, "reli": [2, 4, 8], "predefin": [2, 4, 7, 8], "calibr": 2, "camera_matrix": 2, "distortion_coeffici": 2, "fx": 2, "fy": 2, "cx": 2, "cy": 2, "initial_": 2, "initial_n": 2, "get_posit": 2, "id_count": 2, "detection_enu": 2, "calculate_offset_posit": [2, 5], "lat": 2, "lon": 2, "z_distanc": 2, "x_distanc": 2, "forward": 2, "rightward": 2, "initi": [2, 7, 8], "decim": 2, "clockwis": [2, 4], "geopoint": [2, 6, 7], "radian": [2, 4], "trigonometr": 2, "origin": [2, 7], "vector": [2, 4, 7], "total": 2, "combin": [2, 4], "pythagorean": 2, "theorem": 2, "geodes": [2, 7], "geopi": 2, "librari": 2, "capabl": [2, 4], "destin": [2, 7], "bear": [2, 4, 7], "compat": 2, "servic": [2, 6, 7, 8], "create_kalman_filt": [2, 5], "initial_x": 2, "initial_i": 2, "enu_to_geodet": [2, 5], "back": [2, 7], "geodetic_to_enu": [2, 5], "esp32_comm": 3, "espcomm": [3, 5], "commun": [3, 6], "onboard": 3, "rudder": [3, 4, 6], "trim": [3, 6, 7], "tab": [3, 6], "ballast": [3, 4, 5, 6], "control": [3, 5, 6], "last_wind": 3, "force_neutral_posit": 3, "neutral": 3, "regardless": 3, "could_be_tack": 3, "tack": [3, 4], "maneuv": [3, 4, 7], "last_lift_st": 3, "concern": 3, "lift": 3, "trimstat": [3, 6], "rudder_angle_limit_deg": 3, "limit": [3, 4], "stall": 3, "ballast_pwm_callback": 3, "ballast_timer_callback": 3, "request": [3, 6, 7, 8], "them": [3, 7, 8], "relat": [3, 6, 7], "statu": [3, 4, 8], "recept": 3, "detail": [3, 7], "sent": 3, "trigger": [3, 4, 7], "warn": [3, 7], "potentiomet": 3, "strang": 3, "exampl": 3, "get_ballast_po": 3, "ballast_po": 3, "102": 3, "current_path_callback": [3, 4, 6], "geopath": [3, 4, 6, 7], "find_trim_tab_st": 3, "relative_wind": 3, "either": [3, 7], "maxim": 3, "drag": 3, "iron": 3, "detect": [3, 5], "execut": [3, 4, 6], "max": 3, "25": 3, "100": 3, "180": 3, "260": 3, "335": 3, "min": 3, "compon": [3, 4, 7], "might": [3, 7], "unexpect": 3, "request_tack_callback": 3, "request_tack_overrid": 3, "request_tack_tim": 3, "request_tack_timer_callback": 3, "request_tack_timer_dur": 3, "roll_callback": [3, 6], "rudder_angle_callback": [3, 6], "constraint": 3, "against": [3, 4], "preset": 3, "integ": [3, 7], "exce": 3, "beyond": 3, "heading_control": 3, "rudder_angl": [3, 4], "tt_angle_callback": 3, "find_esp32_serial_port": [3, 5], "heading_controller_vf": 4, "headingcontrol": [4, 5], "robot": 4, "integr": [4, 7], "fuzzi": 4, "logic": 4, "adapt": 4, "path": [4, 5], "follow": [4, 5], "replan": 4, "cross": 4, "vf": 4, "unabl": 4, "converg": 4, "go": [4, 7], "upwind": 4, "differ": [4, 7, 8], "focus": 4, "current_grid_cel": [4, 7], "grid": [4, 7], "cell": [4, 7], "path_seg": 4, "pathseg": 4, "wind_direction_deg": 4, "rudder_adjustment_scal": 4, "iver": 4, "leeway_angl": 4, "compute_rudder_angl": 4, "take": [4, 7], "needs_to_tack": 4, "boat_head": 4, "target_head": 4, "wind_direct": 4, "whether": [4, 7], "adaptive_vector_field": 4, "p1": 4, "p2": 4, "k_base": 4, "lambda_bas": 4, "np": 4, "ndarrai": 4, "proxim": [4, 7], "vector_to_head": [4, 7], "dx": [4, 7], "dy": [4, 7], "getrotationtopointlatlong": 4, "current_theta": 4, "current_lat": 4, "current_long": 4, "target_lat": 4, "target_long": 4, "rotat": [4, 7], "steer": 4, "help": 4, "x1": [4, 7], "y1": [4, 7], "x2": [4, 7], "y2": [4, 7], "end": [4, 7], "attract": 4, "2d": 4, "plane": 4, "align": 4, "d": 4, "project": [4, 7], "onto": 4, "closest": [4, 7], "perpendicular": [4, 7], "forc": 4, "propuls": 4, "natur": 4, "k": 4, "lambda": 4, "diminish": 4, "approach": 4, "increas": 4, "aid": [4, 8], "travel": 4, "airmar_track_degrees_true_callback": 4, "zero": [4, 7], "bring": [4, 8], "reuqest": 4, "happen": 4, "edg": 4, "zone": 4, "leewai": 4, "cap": 4, "affect": [4, 8], "attribut": [4, 7], "rudder_simul": 4, "decis": [4, 7], "assist": 4, "current_grid_cell_callback": 4, "forward_magnitude_callback": 4, "last_heading_error": 4, "last_rudder_tim": 4, "1716959259": 4, "4529746": 4, "magnetic_field_callback": 4, "caus": 4, "switch": 4, "boolean": [4, 8], "otherwis": [4, 8], "normal": 4, "fall": 4, "360": 4, "shortest": 4, "counterclockwis": 4, "li": 4, "arc": 4, "chosen": 4, "ballast_position_publish": 4, "balanc": 4, "potenti": [4, 7], "path_segment_callback": 4, "rudder_adjustment_scale_callback": 4, "rudder_overshoot_bias_callback": 4, "true_wind_callback": [4, 6, 7, 9], "270": [4, 7], "closest_edge_head": [4, 5], "target_track_rad": 4, "wind_angle_rad": 4, "nogo_angle_rad": 4, "target_track": 4, "wind_restriction_replan_cutoff_degre": 4, "restrict": 4, "cutoff": 4, "is_in_nogo": [4, 5], "bearing_rad": 4, "normalrelativeangl": [4, 5], "reader": 5, "node": 5, "buoi": [5, 7], "esp32": 5, "network": 5, "networkcomm": [5, 6], "encode_fram": [5, 6], "find_and_load_imag": [5, 6, 7], "get_resource_dir": [5, 6], "get_stat": [5, 6], "pathfollow": [5, 7], "get_maps_dir": [5, 7], "interpolate_point": [5, 7], "trigger_error_transit": [5, 7], "statemanag": [5, 8], "windsmooth": [5, 9], "index": 5, "modul": 5, "search": [5, 6, 7], "page": 5, "network_comm": [6, 8], "telemetri": 6, "task": 6, "grpc": 6, "current_map": 6, "occupancygrid": 6, "map": [6, 7, 8], "current_boat_st": 6, "protobuf": 6, "hold": 6, "current_video_sourc": 6, "video": 6, "client": [6, 7, 8], "server": [6, 8], "restart": [6, 8], "remot": 6, "effici": [6, 7], "flexibl": 6, "executeaddwaypointcommand": 6, "addwaypointcommand": 6, "context": 6, "executeautonomousmodecommand": 6, "autonomousmodecommand": 6, "executeballastcommand": 6, "ballastcommand": 6, "executemarkbuoycommand": 6, "markbuoycommand": 6, "executerequesttackcommand": 6, "requesttackcommand": 6, "executeruddercommand": 6, "ruddercommand": 6, "executesetcvparameterscommand": 6, "setcvparameterscommand": 6, "executesetrudderadjustmentscalecommand": 6, "setrudderadjustmentscalecommand": 6, "executesetrudderovershootbiascommand": 6, "setrudderovershootbiascommand": 6, "executesetvfforwardmagnitudecommand": 6, "setvfforwardmagnitudecommand": 6, "executesetwaypointscommand": 6, "setwaypointscommand": 6, "executetrimtabcommand": 6, "trimtabcommand": 6, "getcvparamet": 6, "getcvparametersrequest": 6, "getmap": 6, "maprequest": 6, "restartnod": 6, "restartnoderequest": 6, "sendboatst": 6, "boatstaterequest": 6, "streamboatst": 6, "streamvideo": 6, "videorequest": 6, "available_video_sourc": 6, "buoy_position_callback": [6, 7], "buoydetectionstamp": [6, 7], "camera_color_image_callback": 6, "camera_mask_image_callback": 6, "annotatedimag": 6, "control_system_heartbeat": 6, "create_and_bind_error_callback": 6, "node_nam": [6, 8], "create_and_bind_lifecycle_callback": 6, "create_error_callback": 6, "callabl": 6, "create_grpc_serv": 6, "create_lifecycle_callback": 6, "transitionev": 6, "current_buoy_posit": [6, 7], "current_cv_paramet": 6, "decode_imag": 6, "do_video_encod": 6, "heading_callback": [6, 7], "initial_cv_parameters_callback": 6, "last_camera_fram": 6, "last_camera_frame_shap": 6, "last_camera_frame_tim": 6, "1716959260": 6, "006311": 6, "lat_long_callback": 6, "path_segment_debug_callback": 6, "geopathseg": 6, "pitch_callback": 6, "pwm_controller_heartbeat": 6, "rate_of_turn_callback": 6, "set_current_imag": 6, "setup_node_subscript": 6, "shutdown_handl": 6, "signum": 6, "speed_kmh_callback": 6, "speed_knots_callback": 6, "target_heading_debug_callback": 6, "target_position_callback": 6, "target_track_debug_callback": 6, "track_degrees_magnetic_callback": 6, "track_degrees_true_callback": 6, "trim_state_callback": 6, "trim_tab_comms_heartbeat": 6, "update_node_status_timer_callback": 6, "update_video_sourc": 6, "directori": [6, 7], "load": [6, 7], "box": [6, 7], "state_id": 6, "path_follower_vf": 7, "pathfind": 7, "waypoint": 7, "threat": 7, "speed_knot": 7, "wind_angle_deg": 7, "waypointpath": 7, "current_path": 7, "plan": 7, "current_grid_path": 7, "segment_endpoint_indic": 7, "buoy_rounding_distance_met": 7, "round": 7, "min_path_recalculation_interval_second": 7, "recalcul": 7, "excess": 7, "threat_id": 7, "id": [7, 8], "previous_look_ahead_index": 7, "issu": 7, "intersect": 7, "grid_point": 7, "intermedi": 7, "pass": 7, "exact_point": 7, "last_waypoint_was_rounding_typ": 7, "few": 7, "alwai": 7, "airmar_heading_subscript": 7, "airmar_position_subscript": 7, "airmar_speed_knots_subscript": 7, "waypoints_subscript": 7, "clear": [7, 8], "single_waypoint_subscript": 7, "add": 7, "true_wind_subscript": 7, "buoy_position_subscript": 7, "snap": 7, "request_recalculation_subscript": 7, "current_grid_segment_publish": 7, "current_segment_debug_publish": 7, "about": 7, "target_position_publish": 7, "current_path_publish": 7, "current_grid_cell_publish": 7, "set_map_cli": 7, "get_path_cli": 7, "set_threat_cli": 7, "calculate_exact_points_from_waypoint": 7, "exact": 7, "recalculate_path_from_exact_point": 7, "find_look_ahead": 7, "progress": 7, "remove_last_points_if_necessari": 7, "get_square_corn": 7, "four": 7, "corner": 7, "squar": 7, "face": 7, "variant": 7, "see": 7, "path_follow": 7, "py": 7, "look": 7, "add_threat": 7, "gaussian": 7, "synchron": [7, 8], "gaussianthreat": 7, "intens": 7, "refer": 7, "buoy_threat_size_map_unit": 7, "buoy_threat_gaussian_intens": 7, "bbox": 7, "image_width": 7, "image_height": 7, "properli": 7, "airmar_speed_knots_callback": 7, "waypoint_msg": 7, "left": 7, "sailbot_msg": 7, "instanc": 7, "respect": 7, "calculate_initial_bear": 7, "point_a": 7, "point_b": 7, "clear_threat": 7, "16": 7, "displai": 7, "earli": 7, "condition": 7, "next": 7, "closer": 7, "than": 7, "backtrack": 7, "get_path": 7, "goal": 7, "getpath_respons": 7, "get_relevant_square_corn": 7, "target_point": 7, "previous_point": 7, "next_point": 7, "b": 7, "side_length": 7, "orient": 7, "parallel": 7, "diagon": 7, "ad": 7, "grid_to_latlong_proj": 7, "dict": [7, 8], "south": 7, "west": 7, "insert_intermediate_point": 7, "num_per_unit_dist": 7, "posestamp": 7, "insert": 7, "simplifi": 7, "granular": 7, "pair": 7, "multipli": 7, "mani": [7, 8], "consecut": 7, "newli": 7, "interpol": 7, "last_recalculation_tim": 7, "1716959261": 7, "2418623": 7, "latlong_to_grid_proj": 7, "src_proj": 7, "epsg": 7, "4326": 7, "dest_proj": 7, "3857": 7, "pyproj": 7, "usual": 7, "previou": 7, "verifi": 7, "report": 7, "event": 7, "enhanc": 7, "precis": 7, "intend": [7, 8], "unwant": 7, "longer": 7, "compar": 7, "newer": 7, "curther": 7, "awai": 7, "earlier": 7, "sensibl": 7, "request_replan_callback": 7, "single_waypoint_callback": 7, "seri": [7, 8], "append": 7, "receipt": 7, "entir": 7, "complet": [7, 8], "waypoint_threat_id_map": 7, "waypoints_callback": 7, "point1": 7, "point2": 7, "fraction": 7, "startup": 8, "early_node_nam": 8, "upon": 8, "client_state_gett": 8, "client_state_sett": 8, "restart_node_srv": 8, "configure_nod": 8, "activate_nod": 8, "transitionnod": 8, "restart_lifecycle_node_callback": 8, "restart_nod": 8, "get_node_st": 8, "change_node_st": 8, "asynchron": 8, "change_node_state_sync": 8, "suitabl": 8, "launch": 8, "file": 8, "interact": 8, "accord": 8, "awar": 8, "managed_nod": 8, "protocol": 8, "dedic": 8, "NOT": 8, "etc": 8, "async": 8, "spin": 8, "WILL": 8, "deadlock": 8, "simultan": 8, "whose": 8, "wait": 8, "becom": 8, "outcom": 8, "changest": 8, "delai": 8, "three": 8, "unknown": 8, "label": 8, "timeout": 8, "getstat": 8, "obtain": 8, "reactiv": 8, "inact": 8, "unconfigur": 8, "recov": 8, "stabl": 8, "machin": 8, "trace": 8, "taken": 8, "transition_id": 8, "wind_smooth": 9, "version": 9, "last_apparent_wind": 9, "last_true_wind": 9, "num_true_wind_read": 9, "num_apparent_wind_read": 9, "apparent_wind_subscrib": 9, "true_wind_subscrib": 9, "smooth_apparent_wind_publish": 9, "smooth_true_wind_publish": 9, "update_apparent_wind": 9, "update_true_wind": 9, "relative_wind_direct": 9, "true_wind_direct": 9}, "objects": {"": [[0, 0, 0, "-", "airmar_reader"], [1, 0, 0, "-", "ballast_control"], [2, 0, 0, "-", "buoy_detection"], [3, 0, 0, "-", "esp32_comms"], [4, 0, 0, "-", "heading_controller_vf"], [6, 0, 0, "-", "network_comms"], [7, 0, 0, "-", "path_follower_vf"], [8, 0, 0, "-", "state_manager"], [9, 0, 0, "-", "wind_smoother"]], "airmar_reader": [[0, 1, 1, "", "AirmarReader"], [0, 3, 1, "", "main"]], "airmar_reader.AirmarReader": [[0, 2, 1, "", "on_activate"], [0, 2, 1, "", "on_cleanup"], [0, 2, 1, "", "on_configure"], [0, 2, 1, "", "on_deactivate"], [0, 2, 1, "", "publishIfValid"], [0, 2, 1, "", "publish_error"], [0, 2, 1, "", "readLineToJson"], [0, 2, 1, "", "timer_callback"]], "ballast_control": [[1, 1, 1, "", "BallastControl"], [1, 3, 1, "", "bound"], [1, 3, 1, "", "main"], [1, 3, 1, "", "make_json_string"]], "ballast_control.BallastControl": [[1, 4, 1, "", "ADC_FULL_PORT"], [1, 4, 1, "", "ADC_FULL_STARBOARD"], [1, 4, 1, "", "ADC_MAX"], [1, 4, 1, "", "ADC_MIN"], [1, 4, 1, "", "CONTROL_FAST_PORT"], [1, 4, 1, "", "CONTROL_FAST_STARBOARD"], [1, 4, 1, "", "ERROR_MIN_MAGNITUDE"], [1, 4, 1, "", "Kd"], [1, 4, 1, "", "Kp"], [1, 4, 1, "", "MOTOR_FAST_PORT"], [1, 4, 1, "", "MOTOR_FAST_STARBOARD"], [1, 4, 1, "", "MOTOR_STOP"], [1, 4, 1, "", "RAMP_UP_TIME"], [1, 2, 1, "", "airmar_heading_callback"], [1, 2, 1, "", "airmar_roll_callback"], [1, 2, 1, "", "apparent_wind_callback"], [1, 4, 1, "", "autonomous_mode"], [1, 2, 1, "", "autonomous_mode_callback"], [1, 2, 1, "", "ballast_position_callback"], [1, 2, 1, "", "constrain_control"], [1, 2, 1, "", "control_loop_callback"], [1, 2, 1, "", "control_to_motor_value"], [1, 4, 1, "", "current_ballast_position"], [1, 2, 1, "", "current_ballast_position_callback"], [1, 4, 1, "", "current_target"], [1, 4, 1, "", "current_wind_dir"], [1, 4, 1, "", "in_ramp_up"], [1, 2, 1, "", "median"], [1, 4, 1, "", "move"], [1, 4, 1, "", "num_error_readings"], [1, 2, 1, "", "on_activate"], [1, 2, 1, "", "on_cleanup"], [1, 2, 1, "", "on_configure"], [1, 2, 1, "", "on_deactivate"], [1, 2, 1, "", "on_error"], [1, 2, 1, "", "on_shutdown"], [1, 4, 1, "", "previous_error"], [1, 4, 1, "", "previous_time"], [1, 2, 1, "", "publish_error"], [1, 2, 1, "", "roll_correction_callback"], [1, 4, 1, "", "roll_errors"], [1, 4, 1, "", "roll_kp"], [1, 4, 1, "", "start_time"]], "buoy_detection": [[2, 1, 1, "", "BuoyDetection"], [2, 1, 1, "", "Track"], [2, 3, 1, "", "calculate_offset_position"], [2, 3, 1, "", "create_kalman_filter"], [2, 3, 1, "", "enu_to_geodetic"], [2, 3, 1, "", "geodetic_to_enu"], [2, 3, 1, "", "main"]], "buoy_detection.BuoyDetection": [[2, 2, 1, "", "airmar_heading_callback"], [2, 2, 1, "", "airmar_position_callback"], [2, 2, 1, "", "associate_detections_to_tracks"], [2, 4, 1, "", "buoy_types"], [2, 2, 1, "", "calculate_depth"], [2, 2, 1, "", "calculate_object_center"], [2, 2, 1, "", "camera_depth_image_callback"], [2, 4, 1, "", "current_x_scaling_factor"], [2, 4, 1, "", "current_y_scaling_factor"], [2, 2, 1, "", "cv_parameters_callback"], [2, 4, 1, "", "depth_image"], [2, 2, 1, "", "detect_colored_objects"], [2, 2, 1, "", "estimate_depth"], [2, 2, 1, "", "fill_holes"], [2, 2, 1, "", "get_parameters"], [2, 4, 1, "", "heading"], [2, 4, 1, "", "latitude"], [2, 4, 1, "", "longitude"], [2, 2, 1, "", "pixel_to_world"], [2, 2, 1, "", "publish_tracks"], [2, 2, 1, "", "remove_stale_tracks"], [2, 2, 1, "", "set_parameters"], [2, 4, 1, "", "tracks"], [2, 2, 1, "", "zed_image_callback"]], "buoy_detection.Track": [[2, 2, 1, "", "get_position"], [2, 4, 1, "", "id_counter"], [2, 2, 1, "", "predict"], [2, 2, 1, "", "update"]], "esp32_comms": [[3, 1, 1, "", "ESPComms"], [3, 3, 1, "", "find_esp32_serial_ports"], [3, 3, 1, "", "main"]], "esp32_comms.ESPComms": [[3, 2, 1, "", "apparent_wind_callback"], [3, 4, 1, "", "autonomous_mode"], [3, 2, 1, "", "autonomous_mode_callback"], [3, 2, 1, "", "ballast_pwm_callback"], [3, 2, 1, "", "ballast_timer_callback"], [3, 4, 1, "", "could_be_tacking"], [3, 2, 1, "", "current_path_callback"], [3, 2, 1, "", "find_trim_tab_state"], [3, 4, 1, "", "force_neutral_position"], [3, 2, 1, "", "get_parameters"], [3, 4, 1, "", "last_lift_state"], [3, 4, 1, "", "last_winds"], [3, 2, 1, "", "on_activate"], [3, 2, 1, "", "on_cleanup"], [3, 2, 1, "", "on_configure"], [3, 2, 1, "", "on_deactivate"], [3, 2, 1, "", "on_error"], [3, 2, 1, "", "on_shutdown"], [3, 2, 1, "", "publish_error"], [3, 2, 1, "", "request_tack_callback"], [3, 4, 1, "", "request_tack_override"], [3, 4, 1, "", "request_tack_timer"], [3, 2, 1, "", "request_tack_timer_callback"], [3, 4, 1, "", "request_tack_timer_duration"], [3, 2, 1, "", "roll_callback"], [3, 2, 1, "", "rudder_angle_callback"], [3, 4, 1, "", "rudder_angle_limit_deg"], [3, 2, 1, "", "set_parameters"], [3, 2, 1, "", "tt_angle_callback"]], "heading_controller_vf": [[4, 1, 1, "", "HeadingController"], [4, 3, 1, "", "closest_edge_heading"], [4, 3, 1, "", "is_in_nogo"], [4, 3, 1, "", "main"], [4, 3, 1, "", "normalRelativeAngle"]], "heading_controller_vf.HeadingController": [[4, 2, 1, "", "adaptive_vector_field"], [4, 2, 1, "", "airmar_heading_callback"], [4, 2, 1, "", "airmar_position_callback"], [4, 2, 1, "", "airmar_track_degrees_true_callback"], [4, 4, 1, "", "autonomous_mode"], [4, 2, 1, "", "autonomous_mode_callback"], [4, 2, 1, "", "compute_rudder_angle"], [4, 4, 1, "", "current_grid_cell"], [4, 2, 1, "", "current_grid_cell_callback"], [4, 2, 1, "", "current_path_callback"], [4, 2, 1, "", "forward_magnitude_callback"], [4, 2, 1, "", "getRotationToPointLatLong"], [4, 2, 1, "", "get_parameters"], [4, 4, 1, "", "heading"], [4, 4, 1, "", "last_heading_error"], [4, 4, 1, "", "last_rudder_time"], [4, 4, 1, "", "leeway_angle"], [4, 2, 1, "", "magnetic_field_callback"], [4, 2, 1, "", "needs_to_tack"], [4, 2, 1, "", "on_activate"], [4, 2, 1, "", "on_cleanup"], [4, 2, 1, "", "on_configure"], [4, 2, 1, "", "on_deactivate"], [4, 2, 1, "", "on_error"], [4, 2, 1, "", "on_shutdown"], [4, 4, 1, "", "path_segment"], [4, 2, 1, "", "path_segment_callback"], [4, 2, 1, "", "publish_error"], [4, 4, 1, "", "rudder_adjustment_scale"], [4, 2, 1, "", "rudder_adjustment_scale_callback"], [4, 4, 1, "", "rudder_angle"], [4, 2, 1, "", "rudder_overshoot_bias_callback"], [4, 2, 1, "", "set_parameters"], [4, 2, 1, "", "timer_callback"], [4, 2, 1, "", "true_wind_callback"], [4, 2, 1, "", "vector_to_heading"], [4, 4, 1, "", "wind_direction_deg"]], "network_comms": [[6, 1, 1, "", "NetworkComms"], [6, 3, 1, "", "encode_frame"], [6, 3, 1, "", "find_and_load_image"], [6, 3, 1, "", "get_resource_dir"], [6, 3, 1, "", "get_state"], [6, 3, 1, "", "main"], [6, 3, 1, "", "make_json_string"]], "network_comms.NetworkComms": [[6, 2, 1, "", "ExecuteAddWaypointCommand"], [6, 2, 1, "", "ExecuteAutonomousModeCommand"], [6, 2, 1, "", "ExecuteBallastCommand"], [6, 2, 1, "", "ExecuteMarkBuoyCommand"], [6, 2, 1, "", "ExecuteRequestTackCommand"], [6, 2, 1, "", "ExecuteRudderCommand"], [6, 2, 1, "", "ExecuteSetCVParametersCommand"], [6, 2, 1, "", "ExecuteSetRudderAdjustmentScaleCommand"], [6, 2, 1, "", "ExecuteSetRudderOvershootBiasCommand"], [6, 2, 1, "", "ExecuteSetVFForwardMagnitudeCommand"], [6, 2, 1, "", "ExecuteSetWaypointsCommand"], [6, 2, 1, "", "ExecuteTrimTabCommand"], [6, 2, 1, "", "GetCVParameters"], [6, 2, 1, "", "GetMap"], [6, 2, 1, "", "RestartNode"], [6, 2, 1, "", "SendBoatState"], [6, 2, 1, "", "StreamBoatState"], [6, 2, 1, "", "StreamVideo"], [6, 2, 1, "", "apparent_wind_callback"], [6, 4, 1, "", "available_video_sources"], [6, 2, 1, "", "buoy_position_callback"], [6, 2, 1, "", "camera_color_image_callback"], [6, 2, 1, "", "camera_depth_image_callback"], [6, 2, 1, "", "camera_mask_image_callback"], [6, 2, 1, "", "control_system_heartbeat"], [6, 2, 1, "", "create_and_bind_error_callback"], [6, 2, 1, "", "create_and_bind_lifecycle_callback"], [6, 2, 1, "", "create_error_callback"], [6, 2, 1, "", "create_grpc_server"], [6, 2, 1, "", "create_lifecycle_callback"], [6, 4, 1, "", "current_boat_state"], [6, 4, 1, "", "current_buoy_positions"], [6, 4, 1, "", "current_cv_parameters"], [6, 4, 1, "", "current_map"], [6, 2, 1, "", "current_path_callback"], [6, 4, 1, "", "current_video_source"], [6, 2, 1, "", "decode_image"], [6, 4, 1, "", "do_video_encode"], [6, 2, 1, "", "encode_frame"], [6, 2, 1, "", "get_parameters"], [6, 2, 1, "", "heading_callback"], [6, 2, 1, "", "initial_cv_parameters_callback"], [6, 4, 1, "", "last_camera_frame"], [6, 4, 1, "", "last_camera_frame_shape"], [6, 4, 1, "", "last_camera_frame_time"], [6, 2, 1, "", "lat_long_callback"], [6, 2, 1, "", "on_activate"], [6, 2, 1, "", "on_cleanup"], [6, 2, 1, "", "on_configure"], [6, 2, 1, "", "on_deactivate"], [6, 2, 1, "", "on_error"], [6, 2, 1, "", "on_shutdown"], [6, 2, 1, "", "path_segment_debug_callback"], [6, 2, 1, "", "pitch_callback"], [6, 2, 1, "", "pwm_controller_heartbeat"], [6, 2, 1, "", "rate_of_turn_callback"], [6, 2, 1, "", "roll_callback"], [6, 2, 1, "", "rudder_angle_callback"], [6, 2, 1, "", "set_current_image"], [6, 2, 1, "", "set_parameters"], [6, 2, 1, "", "setup_node_subscriptions"], [6, 2, 1, "", "shutdown_handler"], [6, 2, 1, "", "speed_kmh_callback"], [6, 2, 1, "", "speed_knots_callback"], [6, 2, 1, "", "target_heading_debug_callback"], [6, 2, 1, "", "target_position_callback"], [6, 2, 1, "", "target_track_debug_callback"], [6, 2, 1, "", "track_degrees_magnetic_callback"], [6, 2, 1, "", "track_degrees_true_callback"], [6, 2, 1, "", "trim_state_callback"], [6, 2, 1, "", "trim_tab_comms_heartbeat"], [6, 2, 1, "", "true_wind_callback"], [6, 2, 1, "", "update_node_status_timer_callback"], [6, 2, 1, "", "update_video_sources"]], "path_follower_vf": [[7, 1, 1, "", "PathFollower"], [7, 3, 1, "", "distance"], [7, 3, 1, "", "find_and_load_image"], [7, 3, 1, "", "get_maps_dir"], [7, 3, 1, "", "interpolate_point"], [7, 3, 1, "", "main"], [7, 3, 1, "", "trigger_error_transition"]], "path_follower_vf.PathFollower": [[7, 2, 1, "", "add_threat"], [7, 2, 1, "", "airmar_position_callback"], [7, 2, 1, "", "airmar_speed_knots_callback"], [7, 2, 1, "", "buoy_position_callback"], [7, 4, 1, "", "buoy_rounding_distance_meters"], [7, 2, 1, "", "calculate_exact_points_from_waypoint"], [7, 2, 1, "", "calculate_initial_bearing"], [7, 2, 1, "", "clear_threats"], [7, 4, 1, "", "current_buoy_positions"], [7, 4, 1, "", "current_grid_cell"], [7, 4, 1, "", "current_grid_path"], [7, 4, 1, "", "current_path"], [7, 4, 1, "", "exact_points"], [7, 2, 1, "", "find_look_ahead"], [7, 2, 1, "", "get_parameters"], [7, 2, 1, "", "get_path"], [7, 2, 1, "", "get_relevant_square_corners"], [7, 2, 1, "", "get_square_corners"], [7, 4, 1, "", "grid_points"], [7, 2, 1, "", "grid_to_latlong_proj"], [7, 4, 1, "", "heading"], [7, 2, 1, "", "heading_callback"], [7, 2, 1, "", "insert_intermediate_points"], [7, 4, 1, "", "last_recalculation_time"], [7, 4, 1, "", "last_waypoint_was_rounding_type"], [7, 4, 1, "", "latitude"], [7, 2, 1, "", "latlong_to_grid_proj"], [7, 4, 1, "", "longitude"], [7, 4, 1, "", "min_path_recalculation_interval_seconds"], [7, 2, 1, "", "on_activate"], [7, 2, 1, "", "on_cleanup"], [7, 2, 1, "", "on_configure"], [7, 2, 1, "", "on_deactivate"], [7, 2, 1, "", "on_error"], [7, 2, 1, "", "on_shutdown"], [7, 4, 1, "", "previous_look_ahead_index"], [7, 2, 1, "", "publish_error"], [7, 2, 1, "", "recalculate_path_from_exact_points"], [7, 2, 1, "", "remove_last_points_if_necessary"], [7, 2, 1, "", "request_replan_callback"], [7, 4, 1, "", "segment_endpoint_indices"], [7, 2, 1, "", "set_parameters"], [7, 2, 1, "", "single_waypoint_callback"], [7, 4, 1, "", "speed_knots"], [7, 4, 1, "", "threat_ids"], [7, 2, 1, "", "true_wind_callback"], [7, 2, 1, "", "vector_to_heading"], [7, 4, 1, "", "waypoint_threat_id_map"], [7, 4, 1, "", "waypoints"], [7, 2, 1, "", "waypoints_callback"], [7, 4, 1, "", "wind_angle_deg"]], "state_manager": [[8, 1, 1, "", "StateManager"], [8, 3, 1, "", "main"]], "state_manager.StateManager": [[8, 2, 1, "", "activate_nodes"], [8, 2, 1, "", "change_node_state"], [8, 2, 1, "", "change_node_state_sync"], [8, 4, 1, "", "client_state_getters"], [8, 4, 1, "", "client_state_setters"], [8, 2, 1, "", "configure_nodes"], [8, 4, 1, "", "early_node_names"], [8, 2, 1, "", "get_node_state"], [8, 4, 1, "", "node_names"], [8, 2, 1, "", "restart_lifecycle_node_callback"], [8, 2, 1, "", "restart_node"], [8, 2, 1, "", "transitionNodes"]], "wind_smoother": [[9, 1, 1, "", "WindSmoother"], [9, 3, 1, "", "main"]], "wind_smoother.WindSmoother": [[9, 2, 1, "", "apparent_wind_callback"], [9, 2, 1, "", "get_parameters"], [9, 4, 1, "", "last_apparent_winds"], [9, 4, 1, "", "last_true_winds"], [9, 2, 1, "", "median"], [9, 4, 1, "", "num_apparent_wind_readings"], [9, 4, 1, "", "num_true_wind_readings"], [9, 2, 1, "", "on_activate"], [9, 2, 1, "", "on_cleanup"], [9, 2, 1, "", "on_configure"], [9, 2, 1, "", "on_deactivate"], [9, 2, 1, "", "on_error"], [9, 2, 1, "", "on_shutdown"], [9, 2, 1, "", "set_parameters"], [9, 2, 1, "", "true_wind_callback"], [9, 2, 1, "", "update_apparent_winds"], [9, 2, 1, "", "update_true_winds"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:attribute"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "attribute", "Python attribute"]}, "titleterms": {"airmar": 0, "reader": 0, "node": [0, 1, 2, 3, 4, 6, 7, 8, 9], "ballast": 1, "control": [1, 4], "buoi": 2, "detect": 2, "esp32": 3, "comm": [3, 6], "head": 4, "welcom": 5, "sailbot": 5, "": 5, "document": 5, "content": 5, "indic": 5, "tabl": 5, "network": 6, "path": 7, "follow": 7, "state": 8, "manag": 8, "wind": 9, "smoother": 9}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.todo": 2, "sphinx": 58}, "alltitles": {"Airmar Reader Node": [[0, "module-airmar_reader"]], "Ballast Control Node": [[1, "module-ballast_control"]], "Buoy Detection Node": [[2, "module-buoy_detection"]], "ESP32 Comms Node": [[3, "module-esp32_comms"]], "Heading Controller Node": [[4, "module-heading_controller_vf"]], "Welcome to sailbot\u2019s documentation!": [[5, "welcome-to-sailbot-s-documentation"]], "Contents:": [[5, null]], "Indices and tables": [[5, "indices-and-tables"]], "Network Comms Node": [[6, "module-network_comms"]], "Path Follower Node": [[7, "module-path_follower_vf"]], "State Manager Node": [[8, "module-state_manager"]], "Wind Smoother Node": [[9, "module-wind_smoother"]]}, "indexentries": {"airmarreader (class in airmar_reader)": [[0, "airmar_reader.AirmarReader"]], "airmar_reader": [[0, "module-airmar_reader"]], "main() (in module airmar_reader)": [[0, "airmar_reader.main"]], "module": [[0, "module-airmar_reader"], [1, "module-ballast_control"], [2, "module-buoy_detection"], [3, "module-esp32_comms"], [4, "module-heading_controller_vf"], [6, "module-network_comms"], [7, "module-path_follower_vf"], [8, "module-state_manager"], [9, "module-wind_smoother"]], "on_activate() (airmar_reader.airmarreader method)": [[0, "airmar_reader.AirmarReader.on_activate"]], "on_cleanup() (airmar_reader.airmarreader method)": [[0, "airmar_reader.AirmarReader.on_cleanup"]], "on_configure() (airmar_reader.airmarreader method)": [[0, "airmar_reader.AirmarReader.on_configure"]], "on_deactivate() (airmar_reader.airmarreader method)": [[0, "airmar_reader.AirmarReader.on_deactivate"]], "publishifvalid() (airmar_reader.airmarreader method)": [[0, "airmar_reader.AirmarReader.publishIfValid"]], "publish_error() (airmar_reader.airmarreader method)": [[0, "airmar_reader.AirmarReader.publish_error"]], "readlinetojson() (airmar_reader.airmarreader method)": [[0, "airmar_reader.AirmarReader.readLineToJson"]], "timer_callback() (airmar_reader.airmarreader method)": [[0, "airmar_reader.AirmarReader.timer_callback"]], "adc_full_port (ballast_control.ballastcontrol attribute)": [[1, "ballast_control.BallastControl.ADC_FULL_PORT"]], "adc_full_starboard (ballast_control.ballastcontrol attribute)": [[1, "ballast_control.BallastControl.ADC_FULL_STARBOARD"]], "adc_max (ballast_control.ballastcontrol attribute)": [[1, "ballast_control.BallastControl.ADC_MAX"]], "adc_min (ballast_control.ballastcontrol attribute)": [[1, "ballast_control.BallastControl.ADC_MIN"]], "ballastcontrol (class in ballast_control)": [[1, "ballast_control.BallastControl"]], "control_fast_port (ballast_control.ballastcontrol attribute)": [[1, "ballast_control.BallastControl.CONTROL_FAST_PORT"]], "control_fast_starboard (ballast_control.ballastcontrol attribute)": [[1, "ballast_control.BallastControl.CONTROL_FAST_STARBOARD"]], "error_min_magnitude (ballast_control.ballastcontrol attribute)": [[1, "ballast_control.BallastControl.ERROR_MIN_MAGNITUDE"]], "kd (ballast_control.ballastcontrol attribute)": [[1, "ballast_control.BallastControl.Kd"]], "kp (ballast_control.ballastcontrol attribute)": [[1, "ballast_control.BallastControl.Kp"]], "motor_fast_port (ballast_control.ballastcontrol attribute)": [[1, "ballast_control.BallastControl.MOTOR_FAST_PORT"]], "motor_fast_starboard (ballast_control.ballastcontrol attribute)": [[1, "ballast_control.BallastControl.MOTOR_FAST_STARBOARD"]], "motor_stop (ballast_control.ballastcontrol attribute)": [[1, "ballast_control.BallastControl.MOTOR_STOP"]], "ramp_up_time (ballast_control.ballastcontrol attribute)": [[1, "ballast_control.BallastControl.RAMP_UP_TIME"]], "airmar_heading_callback() (ballast_control.ballastcontrol method)": [[1, "ballast_control.BallastControl.airmar_heading_callback"]], "airmar_roll_callback() (ballast_control.ballastcontrol method)": [[1, "ballast_control.BallastControl.airmar_roll_callback"]], "apparent_wind_callback() (ballast_control.ballastcontrol method)": [[1, "ballast_control.BallastControl.apparent_wind_callback"]], "autonomous_mode (ballast_control.ballastcontrol attribute)": [[1, "ballast_control.BallastControl.autonomous_mode"]], "autonomous_mode_callback() (ballast_control.ballastcontrol method)": [[1, "ballast_control.BallastControl.autonomous_mode_callback"]], "ballast_control": [[1, "module-ballast_control"]], "ballast_position_callback() (ballast_control.ballastcontrol method)": [[1, "ballast_control.BallastControl.ballast_position_callback"]], "bound() (in module ballast_control)": [[1, "ballast_control.bound"]], "constrain_control() (ballast_control.ballastcontrol method)": [[1, "ballast_control.BallastControl.constrain_control"]], "control_loop_callback() (ballast_control.ballastcontrol method)": [[1, "ballast_control.BallastControl.control_loop_callback"]], "control_to_motor_value() (ballast_control.ballastcontrol method)": [[1, "ballast_control.BallastControl.control_to_motor_value"]], "current_ballast_position (ballast_control.ballastcontrol attribute)": [[1, "ballast_control.BallastControl.current_ballast_position"]], "current_ballast_position_callback() (ballast_control.ballastcontrol method)": [[1, "ballast_control.BallastControl.current_ballast_position_callback"]], "current_target (ballast_control.ballastcontrol attribute)": [[1, "ballast_control.BallastControl.current_target"]], "current_wind_dir (ballast_control.ballastcontrol attribute)": [[1, "ballast_control.BallastControl.current_wind_dir"]], "in_ramp_up (ballast_control.ballastcontrol attribute)": [[1, "ballast_control.BallastControl.in_ramp_up"]], "main() (in module ballast_control)": [[1, "ballast_control.main"]], "make_json_string() (in module ballast_control)": [[1, "ballast_control.make_json_string"]], "median() (ballast_control.ballastcontrol method)": [[1, "ballast_control.BallastControl.median"]], "move (ballast_control.ballastcontrol attribute)": [[1, "ballast_control.BallastControl.move"]], "num_error_readings (ballast_control.ballastcontrol attribute)": [[1, "ballast_control.BallastControl.num_error_readings"]], "on_activate() (ballast_control.ballastcontrol method)": [[1, "ballast_control.BallastControl.on_activate"]], "on_cleanup() (ballast_control.ballastcontrol method)": [[1, "ballast_control.BallastControl.on_cleanup"]], "on_configure() (ballast_control.ballastcontrol method)": [[1, "ballast_control.BallastControl.on_configure"]], "on_deactivate() (ballast_control.ballastcontrol method)": [[1, "ballast_control.BallastControl.on_deactivate"]], "on_error() (ballast_control.ballastcontrol method)": [[1, "ballast_control.BallastControl.on_error"]], "on_shutdown() (ballast_control.ballastcontrol method)": [[1, "ballast_control.BallastControl.on_shutdown"]], "previous_error (ballast_control.ballastcontrol attribute)": [[1, "ballast_control.BallastControl.previous_error"]], "previous_time (ballast_control.ballastcontrol attribute)": [[1, "ballast_control.BallastControl.previous_time"]], "publish_error() (ballast_control.ballastcontrol method)": [[1, "ballast_control.BallastControl.publish_error"]], "roll_correction_callback() (ballast_control.ballastcontrol method)": [[1, "ballast_control.BallastControl.roll_correction_callback"]], "roll_errors (ballast_control.ballastcontrol attribute)": [[1, "ballast_control.BallastControl.roll_errors"]], "roll_kp (ballast_control.ballastcontrol attribute)": [[1, "ballast_control.BallastControl.roll_kp"]], "start_time (ballast_control.ballastcontrol attribute)": [[1, "ballast_control.BallastControl.start_time"]], "buoydetection (class in buoy_detection)": [[2, "buoy_detection.BuoyDetection"]], "track (class in buoy_detection)": [[2, "buoy_detection.Track"]], "airmar_heading_callback() (buoy_detection.buoydetection method)": [[2, "buoy_detection.BuoyDetection.airmar_heading_callback"]], "airmar_position_callback() (buoy_detection.buoydetection method)": [[2, "buoy_detection.BuoyDetection.airmar_position_callback"]], "associate_detections_to_tracks() (buoy_detection.buoydetection method)": [[2, "buoy_detection.BuoyDetection.associate_detections_to_tracks"]], "buoy_detection": [[2, "module-buoy_detection"]], "buoy_types (buoy_detection.buoydetection attribute)": [[2, "buoy_detection.BuoyDetection.buoy_types"]], "calculate_depth() (buoy_detection.buoydetection method)": [[2, "buoy_detection.BuoyDetection.calculate_depth"]], "calculate_object_center() (buoy_detection.buoydetection method)": [[2, "buoy_detection.BuoyDetection.calculate_object_center"]], "calculate_offset_position() (in module buoy_detection)": [[2, "buoy_detection.calculate_offset_position"]], "camera_depth_image_callback() (buoy_detection.buoydetection method)": [[2, "buoy_detection.BuoyDetection.camera_depth_image_callback"]], "create_kalman_filter() (in module buoy_detection)": [[2, "buoy_detection.create_kalman_filter"]], "current_x_scaling_factor (buoy_detection.buoydetection attribute)": [[2, "buoy_detection.BuoyDetection.current_x_scaling_factor"]], "current_y_scaling_factor (buoy_detection.buoydetection attribute)": [[2, "buoy_detection.BuoyDetection.current_y_scaling_factor"]], "cv_parameters_callback() (buoy_detection.buoydetection method)": [[2, "buoy_detection.BuoyDetection.cv_parameters_callback"]], "depth_image (buoy_detection.buoydetection attribute)": [[2, "buoy_detection.BuoyDetection.depth_image"]], "detect_colored_objects() (buoy_detection.buoydetection method)": [[2, "buoy_detection.BuoyDetection.detect_colored_objects"]], "enu_to_geodetic() (in module buoy_detection)": [[2, "buoy_detection.enu_to_geodetic"]], "estimate_depth() (buoy_detection.buoydetection method)": [[2, "buoy_detection.BuoyDetection.estimate_depth"]], "fill_holes() (buoy_detection.buoydetection method)": [[2, "buoy_detection.BuoyDetection.fill_holes"]], "geodetic_to_enu() (in module buoy_detection)": [[2, "buoy_detection.geodetic_to_enu"]], "get_parameters() (buoy_detection.buoydetection method)": [[2, "buoy_detection.BuoyDetection.get_parameters"]], "get_position() (buoy_detection.track method)": [[2, "buoy_detection.Track.get_position"]], "heading (buoy_detection.buoydetection attribute)": [[2, "buoy_detection.BuoyDetection.heading"]], "id_counter (buoy_detection.track attribute)": [[2, "buoy_detection.Track.id_counter"]], "latitude (buoy_detection.buoydetection attribute)": [[2, "buoy_detection.BuoyDetection.latitude"]], "longitude (buoy_detection.buoydetection attribute)": [[2, "buoy_detection.BuoyDetection.longitude"]], "main() (in module buoy_detection)": [[2, "buoy_detection.main"]], "pixel_to_world() (buoy_detection.buoydetection method)": [[2, "buoy_detection.BuoyDetection.pixel_to_world"]], "predict() (buoy_detection.track method)": [[2, "buoy_detection.Track.predict"]], "publish_tracks() (buoy_detection.buoydetection method)": [[2, "buoy_detection.BuoyDetection.publish_tracks"]], "remove_stale_tracks() (buoy_detection.buoydetection method)": [[2, "buoy_detection.BuoyDetection.remove_stale_tracks"]], "set_parameters() (buoy_detection.buoydetection method)": [[2, "buoy_detection.BuoyDetection.set_parameters"]], "tracks (buoy_detection.buoydetection attribute)": [[2, "buoy_detection.BuoyDetection.tracks"]], "update() (buoy_detection.track method)": [[2, "buoy_detection.Track.update"]], "zed_image_callback() (buoy_detection.buoydetection method)": [[2, "buoy_detection.BuoyDetection.zed_image_callback"]], "espcomms (class in esp32_comms)": [[3, "esp32_comms.ESPComms"]], "apparent_wind_callback() (esp32_comms.espcomms method)": [[3, "esp32_comms.ESPComms.apparent_wind_callback"]], "autonomous_mode (esp32_comms.espcomms attribute)": [[3, "esp32_comms.ESPComms.autonomous_mode"]], "autonomous_mode_callback() (esp32_comms.espcomms method)": [[3, "esp32_comms.ESPComms.autonomous_mode_callback"]], "ballast_pwm_callback() (esp32_comms.espcomms method)": [[3, "esp32_comms.ESPComms.ballast_pwm_callback"]], "ballast_timer_callback() (esp32_comms.espcomms method)": [[3, "esp32_comms.ESPComms.ballast_timer_callback"]], "could_be_tacking (esp32_comms.espcomms attribute)": [[3, "esp32_comms.ESPComms.could_be_tacking"]], "current_path_callback() (esp32_comms.espcomms method)": [[3, "esp32_comms.ESPComms.current_path_callback"]], "esp32_comms": [[3, "module-esp32_comms"]], "find_esp32_serial_ports() (in module esp32_comms)": [[3, "esp32_comms.find_esp32_serial_ports"]], "find_trim_tab_state() (esp32_comms.espcomms method)": [[3, "esp32_comms.ESPComms.find_trim_tab_state"]], "force_neutral_position (esp32_comms.espcomms attribute)": [[3, "esp32_comms.ESPComms.force_neutral_position"]], "get_parameters() (esp32_comms.espcomms method)": [[3, "esp32_comms.ESPComms.get_parameters"]], "last_lift_state (esp32_comms.espcomms attribute)": [[3, "esp32_comms.ESPComms.last_lift_state"]], "last_winds (esp32_comms.espcomms attribute)": [[3, "esp32_comms.ESPComms.last_winds"]], "main() (in module esp32_comms)": [[3, "esp32_comms.main"]], "on_activate() (esp32_comms.espcomms method)": [[3, "esp32_comms.ESPComms.on_activate"]], "on_cleanup() (esp32_comms.espcomms method)": [[3, "esp32_comms.ESPComms.on_cleanup"]], "on_configure() (esp32_comms.espcomms method)": [[3, "esp32_comms.ESPComms.on_configure"]], "on_deactivate() (esp32_comms.espcomms method)": [[3, "esp32_comms.ESPComms.on_deactivate"]], "on_error() (esp32_comms.espcomms method)": [[3, "esp32_comms.ESPComms.on_error"]], "on_shutdown() (esp32_comms.espcomms method)": [[3, "esp32_comms.ESPComms.on_shutdown"]], "publish_error() (esp32_comms.espcomms method)": [[3, "esp32_comms.ESPComms.publish_error"]], "request_tack_callback() (esp32_comms.espcomms method)": [[3, "esp32_comms.ESPComms.request_tack_callback"]], "request_tack_override (esp32_comms.espcomms attribute)": [[3, "esp32_comms.ESPComms.request_tack_override"]], "request_tack_timer (esp32_comms.espcomms attribute)": [[3, "esp32_comms.ESPComms.request_tack_timer"]], "request_tack_timer_callback() (esp32_comms.espcomms method)": [[3, "esp32_comms.ESPComms.request_tack_timer_callback"]], "request_tack_timer_duration (esp32_comms.espcomms attribute)": [[3, "esp32_comms.ESPComms.request_tack_timer_duration"]], "roll_callback() (esp32_comms.espcomms method)": [[3, "esp32_comms.ESPComms.roll_callback"]], "rudder_angle_callback() (esp32_comms.espcomms method)": [[3, "esp32_comms.ESPComms.rudder_angle_callback"]], "rudder_angle_limit_deg (esp32_comms.espcomms attribute)": [[3, "esp32_comms.ESPComms.rudder_angle_limit_deg"]], "set_parameters() (esp32_comms.espcomms method)": [[3, "esp32_comms.ESPComms.set_parameters"]], "tt_angle_callback() (esp32_comms.espcomms method)": [[3, "esp32_comms.ESPComms.tt_angle_callback"]], "headingcontroller (class in heading_controller_vf)": [[4, "heading_controller_vf.HeadingController"]], "adaptive_vector_field() (heading_controller_vf.headingcontroller method)": [[4, "heading_controller_vf.HeadingController.adaptive_vector_field"]], "airmar_heading_callback() (heading_controller_vf.headingcontroller method)": [[4, "heading_controller_vf.HeadingController.airmar_heading_callback"]], "airmar_position_callback() (heading_controller_vf.headingcontroller method)": [[4, "heading_controller_vf.HeadingController.airmar_position_callback"]], "airmar_track_degrees_true_callback() (heading_controller_vf.headingcontroller method)": [[4, "heading_controller_vf.HeadingController.airmar_track_degrees_true_callback"]], "autonomous_mode (heading_controller_vf.headingcontroller attribute)": [[4, "heading_controller_vf.HeadingController.autonomous_mode"]], "autonomous_mode_callback() (heading_controller_vf.headingcontroller method)": [[4, "heading_controller_vf.HeadingController.autonomous_mode_callback"]], "closest_edge_heading() (in module heading_controller_vf)": [[4, "heading_controller_vf.closest_edge_heading"]], "compute_rudder_angle() (heading_controller_vf.headingcontroller method)": [[4, "heading_controller_vf.HeadingController.compute_rudder_angle"]], "current_grid_cell (heading_controller_vf.headingcontroller attribute)": [[4, "heading_controller_vf.HeadingController.current_grid_cell"]], "current_grid_cell_callback() (heading_controller_vf.headingcontroller method)": [[4, "heading_controller_vf.HeadingController.current_grid_cell_callback"]], "current_path_callback() (heading_controller_vf.headingcontroller method)": [[4, "heading_controller_vf.HeadingController.current_path_callback"]], "forward_magnitude_callback() (heading_controller_vf.headingcontroller method)": [[4, "heading_controller_vf.HeadingController.forward_magnitude_callback"]], "getrotationtopointlatlong() (heading_controller_vf.headingcontroller method)": [[4, "heading_controller_vf.HeadingController.getRotationToPointLatLong"]], "get_parameters() (heading_controller_vf.headingcontroller method)": [[4, "heading_controller_vf.HeadingController.get_parameters"]], "heading (heading_controller_vf.headingcontroller attribute)": [[4, "heading_controller_vf.HeadingController.heading"]], "heading_controller_vf": [[4, "module-heading_controller_vf"]], "is_in_nogo() (in module heading_controller_vf)": [[4, "heading_controller_vf.is_in_nogo"]], "last_heading_error (heading_controller_vf.headingcontroller attribute)": [[4, "heading_controller_vf.HeadingController.last_heading_error"]], "last_rudder_time (heading_controller_vf.headingcontroller attribute)": [[4, "heading_controller_vf.HeadingController.last_rudder_time"]], "leeway_angle (heading_controller_vf.headingcontroller attribute)": [[4, "heading_controller_vf.HeadingController.leeway_angle"]], "magnetic_field_callback() (heading_controller_vf.headingcontroller method)": [[4, "heading_controller_vf.HeadingController.magnetic_field_callback"]], "main() (in module heading_controller_vf)": [[4, "heading_controller_vf.main"]], "needs_to_tack() (heading_controller_vf.headingcontroller method)": [[4, "heading_controller_vf.HeadingController.needs_to_tack"]], "normalrelativeangle() (in module heading_controller_vf)": [[4, "heading_controller_vf.normalRelativeAngle"]], "on_activate() (heading_controller_vf.headingcontroller method)": [[4, "heading_controller_vf.HeadingController.on_activate"]], "on_cleanup() (heading_controller_vf.headingcontroller method)": [[4, "heading_controller_vf.HeadingController.on_cleanup"]], "on_configure() (heading_controller_vf.headingcontroller method)": [[4, "heading_controller_vf.HeadingController.on_configure"]], "on_deactivate() (heading_controller_vf.headingcontroller method)": [[4, "heading_controller_vf.HeadingController.on_deactivate"]], "on_error() (heading_controller_vf.headingcontroller method)": [[4, "heading_controller_vf.HeadingController.on_error"]], "on_shutdown() (heading_controller_vf.headingcontroller method)": [[4, "heading_controller_vf.HeadingController.on_shutdown"]], "path_segment (heading_controller_vf.headingcontroller attribute)": [[4, "heading_controller_vf.HeadingController.path_segment"]], "path_segment_callback() (heading_controller_vf.headingcontroller method)": [[4, "heading_controller_vf.HeadingController.path_segment_callback"]], "publish_error() (heading_controller_vf.headingcontroller method)": [[4, "heading_controller_vf.HeadingController.publish_error"]], "rudder_adjustment_scale (heading_controller_vf.headingcontroller attribute)": [[4, "heading_controller_vf.HeadingController.rudder_adjustment_scale"]], "rudder_adjustment_scale_callback() (heading_controller_vf.headingcontroller method)": [[4, "heading_controller_vf.HeadingController.rudder_adjustment_scale_callback"]], "rudder_angle (heading_controller_vf.headingcontroller attribute)": [[4, "heading_controller_vf.HeadingController.rudder_angle"]], "rudder_overshoot_bias_callback() (heading_controller_vf.headingcontroller method)": [[4, "heading_controller_vf.HeadingController.rudder_overshoot_bias_callback"]], "set_parameters() (heading_controller_vf.headingcontroller method)": [[4, "heading_controller_vf.HeadingController.set_parameters"]], "timer_callback() (heading_controller_vf.headingcontroller method)": [[4, "heading_controller_vf.HeadingController.timer_callback"]], "true_wind_callback() (heading_controller_vf.headingcontroller method)": [[4, "heading_controller_vf.HeadingController.true_wind_callback"]], "vector_to_heading() (heading_controller_vf.headingcontroller method)": [[4, "heading_controller_vf.HeadingController.vector_to_heading"]], "wind_direction_deg (heading_controller_vf.headingcontroller attribute)": [[4, "heading_controller_vf.HeadingController.wind_direction_deg"]], "executeaddwaypointcommand() (network_comms.networkcomms method)": [[6, "network_comms.NetworkComms.ExecuteAddWaypointCommand"]], "executeautonomousmodecommand() (network_comms.networkcomms method)": [[6, "network_comms.NetworkComms.ExecuteAutonomousModeCommand"]], "executeballastcommand() (network_comms.networkcomms method)": [[6, "network_comms.NetworkComms.ExecuteBallastCommand"]], "executemarkbuoycommand() (network_comms.networkcomms method)": [[6, "network_comms.NetworkComms.ExecuteMarkBuoyCommand"]], "executerequesttackcommand() (network_comms.networkcomms method)": [[6, "network_comms.NetworkComms.ExecuteRequestTackCommand"]], "executeruddercommand() (network_comms.networkcomms method)": [[6, "network_comms.NetworkComms.ExecuteRudderCommand"]], "executesetcvparameterscommand() (network_comms.networkcomms method)": [[6, "network_comms.NetworkComms.ExecuteSetCVParametersCommand"]], "executesetrudderadjustmentscalecommand() (network_comms.networkcomms method)": [[6, "network_comms.NetworkComms.ExecuteSetRudderAdjustmentScaleCommand"]], "executesetrudderovershootbiascommand() (network_comms.networkcomms method)": [[6, "network_comms.NetworkComms.ExecuteSetRudderOvershootBiasCommand"]], "executesetvfforwardmagnitudecommand() (network_comms.networkcomms method)": [[6, "network_comms.NetworkComms.ExecuteSetVFForwardMagnitudeCommand"]], "executesetwaypointscommand() (network_comms.networkcomms method)": [[6, "network_comms.NetworkComms.ExecuteSetWaypointsCommand"]], "executetrimtabcommand() (network_comms.networkcomms method)": [[6, "network_comms.NetworkComms.ExecuteTrimTabCommand"]], "getcvparameters() (network_comms.networkcomms method)": [[6, "network_comms.NetworkComms.GetCVParameters"]], "getmap() (network_comms.networkcomms method)": [[6, "network_comms.NetworkComms.GetMap"]], "networkcomms (class in network_comms)": [[6, "network_comms.NetworkComms"]], "restartnode() (network_comms.networkcomms method)": [[6, "network_comms.NetworkComms.RestartNode"]], "sendboatstate() (network_comms.networkcomms method)": [[6, "network_comms.NetworkComms.SendBoatState"]], "streamboatstate() (network_comms.networkcomms method)": [[6, "network_comms.NetworkComms.StreamBoatState"]], "streamvideo() (network_comms.networkcomms method)": [[6, "network_comms.NetworkComms.StreamVideo"]], "apparent_wind_callback() (network_comms.networkcomms method)": [[6, "network_comms.NetworkComms.apparent_wind_callback"]], "available_video_sources (network_comms.networkcomms attribute)": [[6, "network_comms.NetworkComms.available_video_sources"]], "buoy_position_callback() (network_comms.networkcomms method)": [[6, "network_comms.NetworkComms.buoy_position_callback"]], "camera_color_image_callback() (network_comms.networkcomms method)": [[6, "network_comms.NetworkComms.camera_color_image_callback"]], "camera_depth_image_callback() (network_comms.networkcomms method)": [[6, "network_comms.NetworkComms.camera_depth_image_callback"]], "camera_mask_image_callback() (network_comms.networkcomms method)": [[6, "network_comms.NetworkComms.camera_mask_image_callback"]], "control_system_heartbeat() (network_comms.networkcomms method)": [[6, "network_comms.NetworkComms.control_system_heartbeat"]], "create_and_bind_error_callback() (network_comms.networkcomms method)": [[6, "network_comms.NetworkComms.create_and_bind_error_callback"]], "create_and_bind_lifecycle_callback() (network_comms.networkcomms method)": [[6, "network_comms.NetworkComms.create_and_bind_lifecycle_callback"]], "create_error_callback() (network_comms.networkcomms method)": [[6, "network_comms.NetworkComms.create_error_callback"]], "create_grpc_server() (network_comms.networkcomms method)": [[6, "network_comms.NetworkComms.create_grpc_server"]], "create_lifecycle_callback() (network_comms.networkcomms method)": [[6, "network_comms.NetworkComms.create_lifecycle_callback"]], "current_boat_state (network_comms.networkcomms attribute)": [[6, "network_comms.NetworkComms.current_boat_state"]], "current_buoy_positions (network_comms.networkcomms attribute)": [[6, "network_comms.NetworkComms.current_buoy_positions"]], "current_cv_parameters (network_comms.networkcomms attribute)": [[6, "network_comms.NetworkComms.current_cv_parameters"]], "current_map (network_comms.networkcomms attribute)": [[6, "network_comms.NetworkComms.current_map"]], "current_path_callback() (network_comms.networkcomms method)": [[6, "network_comms.NetworkComms.current_path_callback"]], "current_video_source (network_comms.networkcomms attribute)": [[6, "network_comms.NetworkComms.current_video_source"]], "decode_image() (network_comms.networkcomms method)": [[6, "network_comms.NetworkComms.decode_image"]], "do_video_encode (network_comms.networkcomms attribute)": [[6, "network_comms.NetworkComms.do_video_encode"]], "encode_frame() (in module network_comms)": [[6, "network_comms.encode_frame"]], "encode_frame() (network_comms.networkcomms method)": [[6, "network_comms.NetworkComms.encode_frame"]], "find_and_load_image() (in module network_comms)": [[6, "network_comms.find_and_load_image"]], "get_parameters() (network_comms.networkcomms method)": [[6, "network_comms.NetworkComms.get_parameters"]], "get_resource_dir() (in module network_comms)": [[6, "network_comms.get_resource_dir"]], "get_state() (in module network_comms)": [[6, "network_comms.get_state"]], "heading_callback() (network_comms.networkcomms method)": [[6, "network_comms.NetworkComms.heading_callback"]], "initial_cv_parameters_callback() (network_comms.networkcomms method)": [[6, "network_comms.NetworkComms.initial_cv_parameters_callback"]], "last_camera_frame (network_comms.networkcomms attribute)": [[6, "network_comms.NetworkComms.last_camera_frame"]], "last_camera_frame_shape (network_comms.networkcomms attribute)": [[6, "network_comms.NetworkComms.last_camera_frame_shape"]], "last_camera_frame_time (network_comms.networkcomms attribute)": [[6, "network_comms.NetworkComms.last_camera_frame_time"]], "lat_long_callback() (network_comms.networkcomms method)": [[6, "network_comms.NetworkComms.lat_long_callback"]], "main() (in module network_comms)": [[6, "network_comms.main"]], "make_json_string() (in module network_comms)": [[6, "network_comms.make_json_string"]], "network_comms": [[6, "module-network_comms"]], "on_activate() (network_comms.networkcomms method)": [[6, "network_comms.NetworkComms.on_activate"]], "on_cleanup() (network_comms.networkcomms method)": [[6, "network_comms.NetworkComms.on_cleanup"]], "on_configure() (network_comms.networkcomms method)": [[6, "network_comms.NetworkComms.on_configure"]], "on_deactivate() (network_comms.networkcomms method)": [[6, "network_comms.NetworkComms.on_deactivate"]], "on_error() (network_comms.networkcomms method)": [[6, "network_comms.NetworkComms.on_error"]], "on_shutdown() (network_comms.networkcomms method)": [[6, "network_comms.NetworkComms.on_shutdown"]], "path_segment_debug_callback() (network_comms.networkcomms method)": [[6, "network_comms.NetworkComms.path_segment_debug_callback"]], "pitch_callback() (network_comms.networkcomms method)": [[6, "network_comms.NetworkComms.pitch_callback"]], "pwm_controller_heartbeat() (network_comms.networkcomms method)": [[6, "network_comms.NetworkComms.pwm_controller_heartbeat"]], "rate_of_turn_callback() (network_comms.networkcomms method)": [[6, "network_comms.NetworkComms.rate_of_turn_callback"]], "roll_callback() (network_comms.networkcomms method)": [[6, "network_comms.NetworkComms.roll_callback"]], "rudder_angle_callback() (network_comms.networkcomms method)": [[6, "network_comms.NetworkComms.rudder_angle_callback"]], "set_current_image() (network_comms.networkcomms method)": [[6, "network_comms.NetworkComms.set_current_image"]], "set_parameters() (network_comms.networkcomms method)": [[6, "network_comms.NetworkComms.set_parameters"]], "setup_node_subscriptions() (network_comms.networkcomms method)": [[6, "network_comms.NetworkComms.setup_node_subscriptions"]], "shutdown_handler() (network_comms.networkcomms method)": [[6, "network_comms.NetworkComms.shutdown_handler"]], "speed_kmh_callback() (network_comms.networkcomms method)": [[6, "network_comms.NetworkComms.speed_kmh_callback"]], "speed_knots_callback() (network_comms.networkcomms method)": [[6, "network_comms.NetworkComms.speed_knots_callback"]], "target_heading_debug_callback() (network_comms.networkcomms method)": [[6, "network_comms.NetworkComms.target_heading_debug_callback"]], "target_position_callback() (network_comms.networkcomms method)": [[6, "network_comms.NetworkComms.target_position_callback"]], "target_track_debug_callback() (network_comms.networkcomms method)": [[6, "network_comms.NetworkComms.target_track_debug_callback"]], "track_degrees_magnetic_callback() (network_comms.networkcomms method)": [[6, "network_comms.NetworkComms.track_degrees_magnetic_callback"]], "track_degrees_true_callback() (network_comms.networkcomms method)": [[6, "network_comms.NetworkComms.track_degrees_true_callback"]], "trim_state_callback() (network_comms.networkcomms method)": [[6, "network_comms.NetworkComms.trim_state_callback"]], "trim_tab_comms_heartbeat() (network_comms.networkcomms method)": [[6, "network_comms.NetworkComms.trim_tab_comms_heartbeat"]], "true_wind_callback() (network_comms.networkcomms method)": [[6, "network_comms.NetworkComms.true_wind_callback"]], "update_node_status_timer_callback() (network_comms.networkcomms method)": [[6, "network_comms.NetworkComms.update_node_status_timer_callback"]], "update_video_sources() (network_comms.networkcomms method)": [[6, "network_comms.NetworkComms.update_video_sources"]], "pathfollower (class in path_follower_vf)": [[7, "path_follower_vf.PathFollower"]], "add_threat() (path_follower_vf.pathfollower method)": [[7, "path_follower_vf.PathFollower.add_threat"]], "airmar_position_callback() (path_follower_vf.pathfollower method)": [[7, "path_follower_vf.PathFollower.airmar_position_callback"]], "airmar_speed_knots_callback() (path_follower_vf.pathfollower method)": [[7, "path_follower_vf.PathFollower.airmar_speed_knots_callback"]], "buoy_position_callback() (path_follower_vf.pathfollower method)": [[7, "path_follower_vf.PathFollower.buoy_position_callback"]], "buoy_rounding_distance_meters (path_follower_vf.pathfollower attribute)": [[7, "path_follower_vf.PathFollower.buoy_rounding_distance_meters"]], "calculate_exact_points_from_waypoint() (path_follower_vf.pathfollower method)": [[7, "path_follower_vf.PathFollower.calculate_exact_points_from_waypoint"]], "calculate_initial_bearing() (path_follower_vf.pathfollower method)": [[7, "path_follower_vf.PathFollower.calculate_initial_bearing"]], "clear_threats() (path_follower_vf.pathfollower method)": [[7, "path_follower_vf.PathFollower.clear_threats"]], "current_buoy_positions (path_follower_vf.pathfollower attribute)": [[7, "path_follower_vf.PathFollower.current_buoy_positions"]], "current_grid_cell (path_follower_vf.pathfollower attribute)": [[7, "path_follower_vf.PathFollower.current_grid_cell"]], "current_grid_path (path_follower_vf.pathfollower attribute)": [[7, "path_follower_vf.PathFollower.current_grid_path"]], "current_path (path_follower_vf.pathfollower attribute)": [[7, "path_follower_vf.PathFollower.current_path"]], "distance() (in module path_follower_vf)": [[7, "path_follower_vf.distance"]], "exact_points (path_follower_vf.pathfollower attribute)": [[7, "path_follower_vf.PathFollower.exact_points"]], "find_and_load_image() (in module path_follower_vf)": [[7, "path_follower_vf.find_and_load_image"]], "find_look_ahead() (path_follower_vf.pathfollower method)": [[7, "path_follower_vf.PathFollower.find_look_ahead"]], "get_maps_dir() (in module path_follower_vf)": [[7, "path_follower_vf.get_maps_dir"]], "get_parameters() (path_follower_vf.pathfollower method)": [[7, "path_follower_vf.PathFollower.get_parameters"]], "get_path() (path_follower_vf.pathfollower method)": [[7, "path_follower_vf.PathFollower.get_path"]], "get_relevant_square_corners() (path_follower_vf.pathfollower method)": [[7, "path_follower_vf.PathFollower.get_relevant_square_corners"]], "get_square_corners() (path_follower_vf.pathfollower method)": [[7, "path_follower_vf.PathFollower.get_square_corners"]], "grid_points (path_follower_vf.pathfollower attribute)": [[7, "path_follower_vf.PathFollower.grid_points"]], "grid_to_latlong_proj() (path_follower_vf.pathfollower method)": [[7, "path_follower_vf.PathFollower.grid_to_latlong_proj"]], "heading (path_follower_vf.pathfollower attribute)": [[7, "path_follower_vf.PathFollower.heading"]], "heading_callback() (path_follower_vf.pathfollower method)": [[7, "path_follower_vf.PathFollower.heading_callback"]], "insert_intermediate_points() (path_follower_vf.pathfollower method)": [[7, "path_follower_vf.PathFollower.insert_intermediate_points"]], "interpolate_point() (in module path_follower_vf)": [[7, "path_follower_vf.interpolate_point"]], "last_recalculation_time (path_follower_vf.pathfollower attribute)": [[7, "path_follower_vf.PathFollower.last_recalculation_time"]], "last_waypoint_was_rounding_type (path_follower_vf.pathfollower attribute)": [[7, "path_follower_vf.PathFollower.last_waypoint_was_rounding_type"]], "latitude (path_follower_vf.pathfollower attribute)": [[7, "path_follower_vf.PathFollower.latitude"]], "latlong_to_grid_proj() (path_follower_vf.pathfollower method)": [[7, "path_follower_vf.PathFollower.latlong_to_grid_proj"]], "longitude (path_follower_vf.pathfollower attribute)": [[7, "path_follower_vf.PathFollower.longitude"]], "main() (in module path_follower_vf)": [[7, "path_follower_vf.main"]], "min_path_recalculation_interval_seconds (path_follower_vf.pathfollower attribute)": [[7, "path_follower_vf.PathFollower.min_path_recalculation_interval_seconds"]], "on_activate() (path_follower_vf.pathfollower method)": [[7, "path_follower_vf.PathFollower.on_activate"]], "on_cleanup() (path_follower_vf.pathfollower method)": [[7, "path_follower_vf.PathFollower.on_cleanup"]], "on_configure() (path_follower_vf.pathfollower method)": [[7, "path_follower_vf.PathFollower.on_configure"]], "on_deactivate() (path_follower_vf.pathfollower method)": [[7, "path_follower_vf.PathFollower.on_deactivate"]], "on_error() (path_follower_vf.pathfollower method)": [[7, "path_follower_vf.PathFollower.on_error"]], "on_shutdown() (path_follower_vf.pathfollower method)": [[7, "path_follower_vf.PathFollower.on_shutdown"]], "path_follower_vf": [[7, "module-path_follower_vf"]], "previous_look_ahead_index (path_follower_vf.pathfollower attribute)": [[7, "path_follower_vf.PathFollower.previous_look_ahead_index"]], "publish_error() (path_follower_vf.pathfollower method)": [[7, "path_follower_vf.PathFollower.publish_error"]], "recalculate_path_from_exact_points() (path_follower_vf.pathfollower method)": [[7, "path_follower_vf.PathFollower.recalculate_path_from_exact_points"]], "remove_last_points_if_necessary() (path_follower_vf.pathfollower method)": [[7, "path_follower_vf.PathFollower.remove_last_points_if_necessary"]], "request_replan_callback() (path_follower_vf.pathfollower method)": [[7, "path_follower_vf.PathFollower.request_replan_callback"]], "segment_endpoint_indices (path_follower_vf.pathfollower attribute)": [[7, "path_follower_vf.PathFollower.segment_endpoint_indices"]], "set_parameters() (path_follower_vf.pathfollower method)": [[7, "path_follower_vf.PathFollower.set_parameters"]], "single_waypoint_callback() (path_follower_vf.pathfollower method)": [[7, "path_follower_vf.PathFollower.single_waypoint_callback"]], "speed_knots (path_follower_vf.pathfollower attribute)": [[7, "path_follower_vf.PathFollower.speed_knots"]], "threat_ids (path_follower_vf.pathfollower attribute)": [[7, "path_follower_vf.PathFollower.threat_ids"]], "trigger_error_transition() (in module path_follower_vf)": [[7, "path_follower_vf.trigger_error_transition"]], "true_wind_callback() (path_follower_vf.pathfollower method)": [[7, "path_follower_vf.PathFollower.true_wind_callback"]], "vector_to_heading() (path_follower_vf.pathfollower method)": [[7, "path_follower_vf.PathFollower.vector_to_heading"]], "waypoint_threat_id_map (path_follower_vf.pathfollower attribute)": [[7, "path_follower_vf.PathFollower.waypoint_threat_id_map"]], "waypoints (path_follower_vf.pathfollower attribute)": [[7, "path_follower_vf.PathFollower.waypoints"]], "waypoints_callback() (path_follower_vf.pathfollower method)": [[7, "path_follower_vf.PathFollower.waypoints_callback"]], "wind_angle_deg (path_follower_vf.pathfollower attribute)": [[7, "path_follower_vf.PathFollower.wind_angle_deg"]], "statemanager (class in state_manager)": [[8, "state_manager.StateManager"]], "activate_nodes() (state_manager.statemanager method)": [[8, "state_manager.StateManager.activate_nodes"]], "change_node_state() (state_manager.statemanager method)": [[8, "state_manager.StateManager.change_node_state"]], "change_node_state_sync() (state_manager.statemanager method)": [[8, "state_manager.StateManager.change_node_state_sync"]], "client_state_getters (state_manager.statemanager attribute)": [[8, "state_manager.StateManager.client_state_getters"]], "client_state_setters (state_manager.statemanager attribute)": [[8, "state_manager.StateManager.client_state_setters"]], "configure_nodes() (state_manager.statemanager method)": [[8, "state_manager.StateManager.configure_nodes"]], "early_node_names (state_manager.statemanager attribute)": [[8, "state_manager.StateManager.early_node_names"]], "get_node_state() (state_manager.statemanager method)": [[8, "state_manager.StateManager.get_node_state"]], "main() (in module state_manager)": [[8, "state_manager.main"]], "node_names (state_manager.statemanager attribute)": [[8, "state_manager.StateManager.node_names"]], "restart_lifecycle_node_callback() (state_manager.statemanager method)": [[8, "state_manager.StateManager.restart_lifecycle_node_callback"]], "restart_node() (state_manager.statemanager method)": [[8, "state_manager.StateManager.restart_node"]], "state_manager": [[8, "module-state_manager"]], "transitionnodes() (state_manager.statemanager method)": [[8, "state_manager.StateManager.transitionNodes"]], "windsmoother (class in wind_smoother)": [[9, "wind_smoother.WindSmoother"]], "apparent_wind_callback() (wind_smoother.windsmoother method)": [[9, "wind_smoother.WindSmoother.apparent_wind_callback"]], "get_parameters() (wind_smoother.windsmoother method)": [[9, "wind_smoother.WindSmoother.get_parameters"]], "last_apparent_winds (wind_smoother.windsmoother attribute)": [[9, "wind_smoother.WindSmoother.last_apparent_winds"]], "last_true_winds (wind_smoother.windsmoother attribute)": [[9, "wind_smoother.WindSmoother.last_true_winds"]], "main() (in module wind_smoother)": [[9, "wind_smoother.main"]], "median() (wind_smoother.windsmoother method)": [[9, "wind_smoother.WindSmoother.median"]], "num_apparent_wind_readings (wind_smoother.windsmoother attribute)": [[9, "wind_smoother.WindSmoother.num_apparent_wind_readings"]], "num_true_wind_readings (wind_smoother.windsmoother attribute)": [[9, "wind_smoother.WindSmoother.num_true_wind_readings"]], "on_activate() (wind_smoother.windsmoother method)": [[9, "wind_smoother.WindSmoother.on_activate"]], "on_cleanup() (wind_smoother.windsmoother method)": [[9, "wind_smoother.WindSmoother.on_cleanup"]], "on_configure() (wind_smoother.windsmoother method)": [[9, "wind_smoother.WindSmoother.on_configure"]], "on_deactivate() (wind_smoother.windsmoother method)": [[9, "wind_smoother.WindSmoother.on_deactivate"]], "on_error() (wind_smoother.windsmoother method)": [[9, "wind_smoother.WindSmoother.on_error"]], "on_shutdown() (wind_smoother.windsmoother method)": [[9, "wind_smoother.WindSmoother.on_shutdown"]], "set_parameters() (wind_smoother.windsmoother method)": [[9, "wind_smoother.WindSmoother.set_parameters"]], "true_wind_callback() (wind_smoother.windsmoother method)": [[9, "wind_smoother.WindSmoother.true_wind_callback"]], "update_apparent_winds() (wind_smoother.windsmoother method)": [[9, "wind_smoother.WindSmoother.update_apparent_winds"]], "update_true_winds() (wind_smoother.windsmoother method)": [[9, "wind_smoother.WindSmoother.update_true_winds"]], "wind_smoother": [[9, "module-wind_smoother"]]}})